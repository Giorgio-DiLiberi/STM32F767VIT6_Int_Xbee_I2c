ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_GPIO_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_GPIO_Init:
  25              	.LFB859:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** #include "BMX160.h"
  29:Src/main.c    **** #include <string.h>
  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE END Includes */
  32:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 2


  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** I2C_HandleTypeDef hi2c4;
  50:Src/main.c    **** 
  51:Src/main.c    **** TIM_HandleTypeDef htim2;
  52:Src/main.c    **** 
  53:Src/main.c    **** UART_HandleTypeDef huart4;
  54:Src/main.c    **** UART_HandleTypeDef huart7;
  55:Src/main.c    **** DMA_HandleTypeDef hdma_uart7_rx;
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** BMX_IMU_typedef BMX; //BMX strut creation
  60:Src/main.c    **** 
  61:Src/main.c    **** uint8_t buff[32]; //buffer for data transmission
  62:Src/main.c    **** char string[] = "Hello World!\r\n";
  63:Src/main.c    **** uint8_t main_counter = 0; //counter to trigger events only after some main cycles
  64:Src/main.c    **** uint8_t tlm_counter = 0; //counter to send telemetry
  65:Src/main.c    **** HAL_StatusTypeDef ret;
  66:Src/main.c    **** 
  67:Src/main.c    **** float Tlm_Tx_buff[6]; //buffer to store the floating point values to send via telemetry
  68:Src/main.c    **** 
  69:Src/main.c    **** float sample_time = 0.01; //[s] sample time
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PV */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  74:Src/main.c    **** void SystemClock_Config(void);
  75:Src/main.c    **** static void MX_GPIO_Init(void);
  76:Src/main.c    **** static void MX_DMA_Init(void);
  77:Src/main.c    **** static void MX_I2C4_Init(void);
  78:Src/main.c    **** static void MX_TIM2_Init(void);
  79:Src/main.c    **** static void MX_UART4_Init(void);
  80:Src/main.c    **** static void MX_UART7_Init(void);
  81:Src/main.c    **** static void MX_TIM1_Init(void);
  82:Src/main.c    **** /* USER CODE BEGIN PFP */
  83:Src/main.c    **** 
  84:Src/main.c    **** void BMX_Init(BMX_IMU_typedef *BMX_str);//init for BMX
  85:Src/main.c    **** 
  86:Src/main.c    **** /* USER CODE END PFP */
  87:Src/main.c    **** 
  88:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  89:Src/main.c    **** /* USER CODE BEGIN 0 */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    **** /* USER CODE END 0 */
  92:Src/main.c    **** 
  93:Src/main.c    **** /**
  94:Src/main.c    ****   * @brief  The application entry point.
  95:Src/main.c    ****   * @retval int
  96:Src/main.c    ****   */
  97:Src/main.c    **** int main(void)
  98:Src/main.c    **** {
  99:Src/main.c    ****   /* USER CODE BEGIN 1 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE END 1 */
 102:Src/main.c    ****   
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 107:Src/main.c    ****   HAL_Init();
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN Init */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END Init */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Configure the system clock */
 114:Src/main.c    ****   SystemClock_Config();
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END SysInit */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Initialize all configured peripherals */
 121:Src/main.c    ****   MX_GPIO_Init();
 122:Src/main.c    ****   MX_DMA_Init();
 123:Src/main.c    ****   MX_I2C4_Init();
 124:Src/main.c    ****   MX_TIM2_Init();
 125:Src/main.c    ****   MX_UART4_Init();
 126:Src/main.c    ****   MX_UART7_Init();
 127:Src/main.c    ****   MX_TIM1_Init();
 128:Src/main.c    ****   /* USER CODE BEGIN 2 */
 129:Src/main.c    **** 
 130:Src/main.c    ****   //BMX initialization
 131:Src/main.c    **** 
 132:Src/main.c    ****   HAL_Delay(1000);
 133:Src/main.c    **** 
 134:Src/main.c    ****   LL_TIM_EnableCounter(TIM1);
 135:Src/main.c    **** 
 136:Src/main.c    ****   BMX_Init(&BMX);
 137:Src/main.c    **** 
 138:Src/main.c    ****   //writing hello world on xbee
 139:Src/main.c    ****   sprintf((char*)buff, string);
 140:Src/main.c    **** 
 141:Src/main.c    ****   HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 142:Src/main.c    **** 
 143:Src/main.c    ****   //BMX calibration
 144:Src/main.c    ****   BMX_calibration(&BMX);
 145:Src/main.c    **** 
 146:Src/main.c    ****   //Starting timer 2 in interrupt mode
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 4


 147:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2); //this function start the timer in interrupt mode and calls the ir
 148:Src/main.c    ****   //every time that an interrupt event occurs, but the only event which will call a function is per
 149:Src/main.c    **** 
 150:Src/main.c    ****   /* USER CODE END 2 */
 151:Src/main.c    ****  
 152:Src/main.c    ****  
 153:Src/main.c    **** 
 154:Src/main.c    ****   /* Infinite loop */
 155:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 156:Src/main.c    ****   while (1)
 157:Src/main.c    ****   {
 158:Src/main.c    ****     /* USER CODE END WHILE */
 159:Src/main.c    **** 
 160:Src/main.c    ****     /* USER CODE BEGIN 3 */
 161:Src/main.c    ****   }
 162:Src/main.c    ****   /* USER CODE END 3 */
 163:Src/main.c    **** }
 164:Src/main.c    **** 
 165:Src/main.c    **** /**
 166:Src/main.c    ****   * @brief System Clock Configuration
 167:Src/main.c    ****   * @retval None
 168:Src/main.c    ****   */
 169:Src/main.c    **** void SystemClock_Config(void)
 170:Src/main.c    **** {
 171:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 172:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 173:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 174:Src/main.c    **** 
 175:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 176:Src/main.c    ****   */
 177:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 178:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 179:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 180:Src/main.c    ****   */
 181:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 182:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 189:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 190:Src/main.c    ****   {
 191:Src/main.c    ****     Error_Handler();
 192:Src/main.c    ****   }
 193:Src/main.c    ****   /** Activate the Over-Drive mode 
 194:Src/main.c    ****   */
 195:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 196:Src/main.c    ****   {
 197:Src/main.c    ****     Error_Handler();
 198:Src/main.c    ****   }
 199:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 200:Src/main.c    ****   */
 201:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 202:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 203:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 5


 204:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 205:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 206:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 207:Src/main.c    **** 
 208:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 209:Src/main.c    ****   {
 210:Src/main.c    ****     Error_Handler();
 211:Src/main.c    ****   }
 212:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_UART4|RCC_PERIPHCLK_UART7
 213:Src/main.c    ****                               |RCC_PERIPHCLK_I2C4;
 214:Src/main.c    ****   PeriphClkInitStruct.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 215:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 216:Src/main.c    ****   PeriphClkInitStruct.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 217:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 218:Src/main.c    ****   {
 219:Src/main.c    ****     Error_Handler();
 220:Src/main.c    ****   }
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /**
 224:Src/main.c    ****   * @brief I2C4 Initialization Function
 225:Src/main.c    ****   * @param None
 226:Src/main.c    ****   * @retval None
 227:Src/main.c    ****   */
 228:Src/main.c    **** static void MX_I2C4_Init(void)
 229:Src/main.c    **** {
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* USER CODE BEGIN I2C4_Init 0 */
 232:Src/main.c    **** 
 233:Src/main.c    ****   /* USER CODE END I2C4_Init 0 */
 234:Src/main.c    **** 
 235:Src/main.c    ****   /* USER CODE BEGIN I2C4_Init 1 */
 236:Src/main.c    **** 
 237:Src/main.c    ****   /* USER CODE END I2C4_Init 1 */
 238:Src/main.c    ****   hi2c4.Instance = I2C4;
 239:Src/main.c    ****   hi2c4.Init.Timing = 0x2010091A;
 240:Src/main.c    ****   hi2c4.Init.OwnAddress1 = 0;
 241:Src/main.c    ****   hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 242:Src/main.c    ****   hi2c4.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 243:Src/main.c    ****   hi2c4.Init.OwnAddress2 = 0;
 244:Src/main.c    ****   hi2c4.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 245:Src/main.c    ****   hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 246:Src/main.c    ****   hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 247:Src/main.c    ****   if (HAL_I2C_Init(&hi2c4) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     Error_Handler();
 250:Src/main.c    ****   }
 251:Src/main.c    ****   /** Configure Analogue filter 
 252:Src/main.c    ****   */
 253:Src/main.c    ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 256:Src/main.c    ****   }
 257:Src/main.c    ****   /** Configure Digital filter 
 258:Src/main.c    ****   */
 259:Src/main.c    ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
 260:Src/main.c    ****   {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 6


 261:Src/main.c    ****     Error_Handler();
 262:Src/main.c    ****   }
 263:Src/main.c    ****   /* USER CODE BEGIN I2C4_Init 2 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE END I2C4_Init 2 */
 266:Src/main.c    **** 
 267:Src/main.c    **** }
 268:Src/main.c    **** 
 269:Src/main.c    **** /**
 270:Src/main.c    ****   * @brief TIM1 Initialization Function
 271:Src/main.c    ****   * @param None
 272:Src/main.c    ****   * @retval None
 273:Src/main.c    ****   */
 274:Src/main.c    **** static void MX_TIM1_Init(void)
 275:Src/main.c    **** {
 276:Src/main.c    **** 
 277:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 280:Src/main.c    **** 
 281:Src/main.c    ****   LL_TIM_InitTypeDef TIM_InitStruct = {0};
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* Peripheral clock enable */
 284:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_TIM1);
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 287:Src/main.c    **** 
 288:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 289:Src/main.c    ****   TIM_InitStruct.Prescaler = 191;
 290:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 291:Src/main.c    ****   TIM_InitStruct.Autoreload = 65000;
 292:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 293:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = 0;
 294:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 295:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM1);
 296:Src/main.c    ****   LL_TIM_SetClockSource(TIM1, LL_TIM_CLOCKSOURCE_INTERNAL);
 297:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM1, LL_TIM_TRGO_RESET);
 298:Src/main.c    ****   LL_TIM_SetTriggerOutput2(TIM1, LL_TIM_TRGO2_RESET);
 299:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM1);
 300:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 301:Src/main.c    **** 
 302:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 303:Src/main.c    **** 
 304:Src/main.c    **** }
 305:Src/main.c    **** 
 306:Src/main.c    **** /**
 307:Src/main.c    ****   * @brief TIM2 Initialization Function
 308:Src/main.c    ****   * @param None
 309:Src/main.c    ****   * @retval None
 310:Src/main.c    ****   */
 311:Src/main.c    **** static void MX_TIM2_Init(void)
 312:Src/main.c    **** {
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 315:Src/main.c    **** 
 316:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 317:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 7


 318:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 319:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 324:Src/main.c    ****   htim2.Instance = TIM2;
 325:Src/main.c    ****   htim2.Init.Prescaler = 95;
 326:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 327:Src/main.c    ****   htim2.Init.Period = 9999;
 328:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 329:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 330:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 331:Src/main.c    ****   {
 332:Src/main.c    ****     Error_Handler();
 333:Src/main.c    ****   }
 334:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 335:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 336:Src/main.c    ****   {
 337:Src/main.c    ****     Error_Handler();
 338:Src/main.c    ****   }
 339:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 340:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 341:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 342:Src/main.c    ****   {
 343:Src/main.c    ****     Error_Handler();
 344:Src/main.c    ****   }
 345:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 348:Src/main.c    **** 
 349:Src/main.c    **** }
 350:Src/main.c    **** 
 351:Src/main.c    **** /**
 352:Src/main.c    ****   * @brief UART4 Initialization Function
 353:Src/main.c    ****   * @param None
 354:Src/main.c    ****   * @retval None
 355:Src/main.c    ****   */
 356:Src/main.c    **** static void MX_UART4_Init(void)
 357:Src/main.c    **** {
 358:Src/main.c    **** 
 359:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 0 */
 360:Src/main.c    **** 
 361:Src/main.c    ****   /* USER CODE END UART4_Init 0 */
 362:Src/main.c    **** 
 363:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 1 */
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE END UART4_Init 1 */
 366:Src/main.c    ****   huart4.Instance = UART4;
 367:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 368:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 369:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 370:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 371:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 372:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 373:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 374:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 8


 375:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 376:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 377:Src/main.c    ****   {
 378:Src/main.c    ****     Error_Handler();
 379:Src/main.c    ****   }
 380:Src/main.c    ****   /* USER CODE BEGIN UART4_Init 2 */
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* USER CODE END UART4_Init 2 */
 383:Src/main.c    **** 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** /**
 387:Src/main.c    ****   * @brief UART7 Initialization Function
 388:Src/main.c    ****   * @param None
 389:Src/main.c    ****   * @retval None
 390:Src/main.c    ****   */
 391:Src/main.c    **** static void MX_UART7_Init(void)
 392:Src/main.c    **** {
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 0 */
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* USER CODE END UART7_Init 0 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 1 */
 399:Src/main.c    **** 
 400:Src/main.c    ****   /* USER CODE END UART7_Init 1 */
 401:Src/main.c    ****   huart7.Instance = UART7;
 402:Src/main.c    ****   huart7.Init.BaudRate = 100000;
 403:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_9B;
 404:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 405:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 406:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 407:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 408:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 409:Src/main.c    ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 410:Src/main.c    ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 411:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 412:Src/main.c    ****   {
 413:Src/main.c    ****     Error_Handler();
 414:Src/main.c    ****   }
 415:Src/main.c    ****   /* USER CODE BEGIN UART7_Init 2 */
 416:Src/main.c    **** 
 417:Src/main.c    ****   /* USER CODE END UART7_Init 2 */
 418:Src/main.c    **** 
 419:Src/main.c    **** }
 420:Src/main.c    **** 
 421:Src/main.c    **** /** 
 422:Src/main.c    ****   * Enable DMA controller clock
 423:Src/main.c    ****   */
 424:Src/main.c    **** static void MX_DMA_Init(void) 
 425:Src/main.c    **** {
 426:Src/main.c    **** 
 427:Src/main.c    ****   /* DMA controller clock enable */
 428:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* DMA interrupt init */
 431:Src/main.c    ****   /* DMA1_Stream3_IRQn interrupt configuration */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 9


 432:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
 433:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 434:Src/main.c    **** 
 435:Src/main.c    **** }
 436:Src/main.c    **** 
 437:Src/main.c    **** /**
 438:Src/main.c    ****   * @brief GPIO Initialization Function
 439:Src/main.c    ****   * @param None
 440:Src/main.c    ****   * @retval None
 441:Src/main.c    ****   */
 442:Src/main.c    **** static void MX_GPIO_Init(void)
 443:Src/main.c    **** {
  27              		.loc 1 443 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
 444:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 444 3 view .LVU1
  41              		.loc 1 444 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 445:Src/main.c    **** 
 446:Src/main.c    ****   /* GPIO Ports Clock Enable */
 447:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  48              		.loc 1 447 3 is_stmt 1 view .LVU3
  49              	.LBB37:
  50              		.loc 1 447 3 view .LVU4
  51              		.loc 1 447 3 view .LVU5
  52 0010 1B4B     		ldr	r3, .L3
  53 0012 1A6B     		ldr	r2, [r3, #48]
  54 0014 42F01002 		orr	r2, r2, #16
  55 0018 1A63     		str	r2, [r3, #48]
  56              		.loc 1 447 3 view .LVU6
  57 001a 1A6B     		ldr	r2, [r3, #48]
  58 001c 02F01002 		and	r2, r2, #16
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 447 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE37:
  63              		.loc 1 447 3 view .LVU8
 448:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 448 3 view .LVU9
  65              	.LBB38:
  66              		.loc 1 448 3 view .LVU10
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 10


  67              		.loc 1 448 3 view .LVU11
  68 0024 1A6B     		ldr	r2, [r3, #48]
  69 0026 42F08002 		orr	r2, r2, #128
  70 002a 1A63     		str	r2, [r3, #48]
  71              		.loc 1 448 3 view .LVU12
  72 002c 1A6B     		ldr	r2, [r3, #48]
  73 002e 02F08002 		and	r2, r2, #128
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 448 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE38:
  78              		.loc 1 448 3 view .LVU14
 449:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 449 3 view .LVU15
  80              	.LBB39:
  81              		.loc 1 449 3 view .LVU16
  82              		.loc 1 449 3 view .LVU17
  83 0036 1A6B     		ldr	r2, [r3, #48]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c 1A63     		str	r2, [r3, #48]
  86              		.loc 1 449 3 view .LVU18
  87 003e 1A6B     		ldr	r2, [r3, #48]
  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 449 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE39:
  93              		.loc 1 449 3 view .LVU20
 450:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 450 3 view .LVU21
  95              	.LBB40:
  96              		.loc 1 450 3 view .LVU22
  97              		.loc 1 450 3 view .LVU23
  98 0048 1A6B     		ldr	r2, [r3, #48]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e 1A63     		str	r2, [r3, #48]
 101              		.loc 1 450 3 view .LVU24
 102 0050 1B6B     		ldr	r3, [r3, #48]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 450 3 view .LVU25
 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE40:
 108              		.loc 1 450 3 view .LVU26
 451:Src/main.c    **** 
 452:Src/main.c    ****   /*Configure GPIO pin Output Level */
 453:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2, GPIO_PIN_RESET);
 109              		.loc 1 453 3 view .LVU27
 110 005a 0A4D     		ldr	r5, .L3+4
 111 005c 2246     		mov	r2, r4
 112 005e 0421     		movs	r1, #4
 113 0060 2846     		mov	r0, r5
 114 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL0:
 454:Src/main.c    **** 
 455:Src/main.c    ****   /*Configure GPIO pin : PE2 */
 456:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 11


 116              		.loc 1 456 3 view .LVU28
 117              		.loc 1 456 23 is_stmt 0 view .LVU29
 118 0066 0423     		movs	r3, #4
 119 0068 0593     		str	r3, [sp, #20]
 457:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 120              		.loc 1 457 3 is_stmt 1 view .LVU30
 121              		.loc 1 457 24 is_stmt 0 view .LVU31
 122 006a 0123     		movs	r3, #1
 123 006c 0693     		str	r3, [sp, #24]
 458:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 458 3 is_stmt 1 view .LVU32
 125              		.loc 1 458 24 is_stmt 0 view .LVU33
 126 006e 0794     		str	r4, [sp, #28]
 459:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 127              		.loc 1 459 3 is_stmt 1 view .LVU34
 128              		.loc 1 459 25 is_stmt 0 view .LVU35
 129 0070 0894     		str	r4, [sp, #32]
 460:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 130              		.loc 1 460 3 is_stmt 1 view .LVU36
 131 0072 05A9     		add	r1, sp, #20
 132 0074 2846     		mov	r0, r5
 133 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL1:
 461:Src/main.c    **** 
 462:Src/main.c    **** }
 135              		.loc 1 462 1 is_stmt 0 view .LVU37
 136 007a 0BB0     		add	sp, sp, #44
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 007c 30BD     		pop	{r4, r5, pc}
 141              	.L4:
 142 007e 00BF     		.align	2
 143              	.L3:
 144 0080 00380240 		.word	1073887232
 145 0084 00100240 		.word	1073876992
 146              		.cfi_endproc
 147              	.LFE859:
 149              		.section	.text.MX_DMA_Init,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv5-d16
 156              	MX_DMA_Init:
 157              	.LFB858:
 425:Src/main.c    **** 
 158              		.loc 1 425 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162 0000 00B5     		push	{lr}
 163              	.LCFI3:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              	.LCFI4:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 12


 168              		.cfi_def_cfa_offset 16
 428:Src/main.c    **** 
 169              		.loc 1 428 3 view .LVU39
 170              	.LBB41:
 428:Src/main.c    **** 
 171              		.loc 1 428 3 view .LVU40
 428:Src/main.c    **** 
 172              		.loc 1 428 3 view .LVU41
 173 0004 0A4B     		ldr	r3, .L7
 174 0006 1A6B     		ldr	r2, [r3, #48]
 175 0008 42F40012 		orr	r2, r2, #2097152
 176 000c 1A63     		str	r2, [r3, #48]
 428:Src/main.c    **** 
 177              		.loc 1 428 3 view .LVU42
 178 000e 1B6B     		ldr	r3, [r3, #48]
 179 0010 03F40013 		and	r3, r3, #2097152
 180 0014 0193     		str	r3, [sp, #4]
 428:Src/main.c    **** 
 181              		.loc 1 428 3 view .LVU43
 182 0016 019B     		ldr	r3, [sp, #4]
 183              	.LBE41:
 428:Src/main.c    **** 
 184              		.loc 1 428 3 view .LVU44
 432:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 185              		.loc 1 432 3 view .LVU45
 186 0018 0022     		movs	r2, #0
 187 001a 1146     		mov	r1, r2
 188 001c 0E20     		movs	r0, #14
 189 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 190              	.LVL2:
 433:Src/main.c    **** 
 191              		.loc 1 433 3 view .LVU46
 192 0022 0E20     		movs	r0, #14
 193 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 194              	.LVL3:
 435:Src/main.c    **** 
 195              		.loc 1 435 1 is_stmt 0 view .LVU47
 196 0028 03B0     		add	sp, sp, #12
 197              	.LCFI5:
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 002a 5DF804FB 		ldr	pc, [sp], #4
 201              	.L8:
 202 002e 00BF     		.align	2
 203              	.L7:
 204 0030 00380240 		.word	1073887232
 205              		.cfi_endproc
 206              	.LFE858:
 208              		.section	.text.MX_I2C4_Init,"ax",%progbits
 209              		.align	1
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv5-d16
 215              	MX_I2C4_Init:
 216              	.LFB853:
 229:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 13


 217              		.loc 1 229 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 38B5     		push	{r3, r4, r5, lr}
 222              	.LCFI6:
 223              		.cfi_def_cfa_offset 16
 224              		.cfi_offset 3, -16
 225              		.cfi_offset 4, -12
 226              		.cfi_offset 5, -8
 227              		.cfi_offset 14, -4
 238:Src/main.c    ****   hi2c4.Init.Timing = 0x2010091A;
 228              		.loc 1 238 3 view .LVU49
 238:Src/main.c    ****   hi2c4.Init.Timing = 0x2010091A;
 229              		.loc 1 238 18 is_stmt 0 view .LVU50
 230 0002 0D4C     		ldr	r4, .L11
 231 0004 0D4B     		ldr	r3, .L11+4
 232 0006 2360     		str	r3, [r4]
 239:Src/main.c    ****   hi2c4.Init.OwnAddress1 = 0;
 233              		.loc 1 239 3 is_stmt 1 view .LVU51
 239:Src/main.c    ****   hi2c4.Init.OwnAddress1 = 0;
 234              		.loc 1 239 21 is_stmt 0 view .LVU52
 235 0008 0D4B     		ldr	r3, .L11+8
 236 000a 6360     		str	r3, [r4, #4]
 240:Src/main.c    ****   hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 237              		.loc 1 240 3 is_stmt 1 view .LVU53
 240:Src/main.c    ****   hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 238              		.loc 1 240 26 is_stmt 0 view .LVU54
 239 000c 0025     		movs	r5, #0
 240 000e A560     		str	r5, [r4, #8]
 241:Src/main.c    ****   hi2c4.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 241              		.loc 1 241 3 is_stmt 1 view .LVU55
 241:Src/main.c    ****   hi2c4.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 242              		.loc 1 241 29 is_stmt 0 view .LVU56
 243 0010 0123     		movs	r3, #1
 244 0012 E360     		str	r3, [r4, #12]
 242:Src/main.c    ****   hi2c4.Init.OwnAddress2 = 0;
 245              		.loc 1 242 3 is_stmt 1 view .LVU57
 242:Src/main.c    ****   hi2c4.Init.OwnAddress2 = 0;
 246              		.loc 1 242 30 is_stmt 0 view .LVU58
 247 0014 2561     		str	r5, [r4, #16]
 243:Src/main.c    ****   hi2c4.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 248              		.loc 1 243 3 is_stmt 1 view .LVU59
 243:Src/main.c    ****   hi2c4.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 249              		.loc 1 243 26 is_stmt 0 view .LVU60
 250 0016 6561     		str	r5, [r4, #20]
 244:Src/main.c    ****   hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 251              		.loc 1 244 3 is_stmt 1 view .LVU61
 244:Src/main.c    ****   hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 252              		.loc 1 244 31 is_stmt 0 view .LVU62
 253 0018 A561     		str	r5, [r4, #24]
 245:Src/main.c    ****   hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 254              		.loc 1 245 3 is_stmt 1 view .LVU63
 245:Src/main.c    ****   hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 255              		.loc 1 245 30 is_stmt 0 view .LVU64
 256 001a E561     		str	r5, [r4, #28]
 246:Src/main.c    ****   if (HAL_I2C_Init(&hi2c4) != HAL_OK)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 14


 257              		.loc 1 246 3 is_stmt 1 view .LVU65
 246:Src/main.c    ****   if (HAL_I2C_Init(&hi2c4) != HAL_OK)
 258              		.loc 1 246 28 is_stmt 0 view .LVU66
 259 001c 2562     		str	r5, [r4, #32]
 247:Src/main.c    ****   {
 260              		.loc 1 247 3 is_stmt 1 view .LVU67
 247:Src/main.c    ****   {
 261              		.loc 1 247 7 is_stmt 0 view .LVU68
 262 001e 2046     		mov	r0, r4
 263 0020 FFF7FEFF 		bl	HAL_I2C_Init
 264              	.LVL4:
 253:Src/main.c    ****   {
 265              		.loc 1 253 3 is_stmt 1 view .LVU69
 253:Src/main.c    ****   {
 266              		.loc 1 253 7 is_stmt 0 view .LVU70
 267 0024 2946     		mov	r1, r5
 268 0026 2046     		mov	r0, r4
 269 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 270              	.LVL5:
 259:Src/main.c    ****   {
 271              		.loc 1 259 3 is_stmt 1 view .LVU71
 259:Src/main.c    ****   {
 272              		.loc 1 259 7 is_stmt 0 view .LVU72
 273 002c 2946     		mov	r1, r5
 274 002e 2046     		mov	r0, r4
 275 0030 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 276              	.LVL6:
 267:Src/main.c    **** 
 277              		.loc 1 267 1 view .LVU73
 278 0034 38BD     		pop	{r3, r4, r5, pc}
 279              	.L12:
 280 0036 00BF     		.align	2
 281              	.L11:
 282 0038 00000000 		.word	.LANCHOR0
 283 003c 00600040 		.word	1073766400
 284 0040 1A091020 		.word	537921818
 285              		.cfi_endproc
 286              	.LFE853:
 288              		.section	.text.MX_TIM2_Init,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv5-d16
 295              	MX_TIM2_Init:
 296              	.LFB855:
 312:Src/main.c    **** 
 297              		.loc 1 312 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 32
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 30B5     		push	{r4, r5, lr}
 302              	.LCFI7:
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 5, -8
 306              		.cfi_offset 14, -4
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 15


 307 0002 89B0     		sub	sp, sp, #36
 308              	.LCFI8:
 309              		.cfi_def_cfa_offset 48
 318:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 310              		.loc 1 318 3 view .LVU75
 318:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 311              		.loc 1 318 26 is_stmt 0 view .LVU76
 312 0004 0024     		movs	r4, #0
 313 0006 0494     		str	r4, [sp, #16]
 314 0008 0594     		str	r4, [sp, #20]
 315 000a 0694     		str	r4, [sp, #24]
 316 000c 0794     		str	r4, [sp, #28]
 319:Src/main.c    **** 
 317              		.loc 1 319 3 is_stmt 1 view .LVU77
 319:Src/main.c    **** 
 318              		.loc 1 319 27 is_stmt 0 view .LVU78
 319 000e 0194     		str	r4, [sp, #4]
 320 0010 0294     		str	r4, [sp, #8]
 321 0012 0394     		str	r4, [sp, #12]
 324:Src/main.c    ****   htim2.Init.Prescaler = 95;
 322              		.loc 1 324 3 is_stmt 1 view .LVU79
 324:Src/main.c    ****   htim2.Init.Prescaler = 95;
 323              		.loc 1 324 18 is_stmt 0 view .LVU80
 324 0014 0E4D     		ldr	r5, .L15
 325 0016 4FF08043 		mov	r3, #1073741824
 326 001a 2B60     		str	r3, [r5]
 325:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 327              		.loc 1 325 3 is_stmt 1 view .LVU81
 325:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 328              		.loc 1 325 24 is_stmt 0 view .LVU82
 329 001c 5F23     		movs	r3, #95
 330 001e 6B60     		str	r3, [r5, #4]
 326:Src/main.c    ****   htim2.Init.Period = 9999;
 331              		.loc 1 326 3 is_stmt 1 view .LVU83
 326:Src/main.c    ****   htim2.Init.Period = 9999;
 332              		.loc 1 326 26 is_stmt 0 view .LVU84
 333 0020 AC60     		str	r4, [r5, #8]
 327:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 334              		.loc 1 327 3 is_stmt 1 view .LVU85
 327:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 335              		.loc 1 327 21 is_stmt 0 view .LVU86
 336 0022 42F20F73 		movw	r3, #9999
 337 0026 EB60     		str	r3, [r5, #12]
 328:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 338              		.loc 1 328 3 is_stmt 1 view .LVU87
 328:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 339              		.loc 1 328 28 is_stmt 0 view .LVU88
 340 0028 2C61     		str	r4, [r5, #16]
 329:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 341              		.loc 1 329 3 is_stmt 1 view .LVU89
 329:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 342              		.loc 1 329 32 is_stmt 0 view .LVU90
 343 002a AC61     		str	r4, [r5, #24]
 330:Src/main.c    ****   {
 344              		.loc 1 330 3 is_stmt 1 view .LVU91
 330:Src/main.c    ****   {
 345              		.loc 1 330 7 is_stmt 0 view .LVU92
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 16


 346 002c 2846     		mov	r0, r5
 347 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 348              	.LVL7:
 334:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 349              		.loc 1 334 3 is_stmt 1 view .LVU93
 334:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 350              		.loc 1 334 34 is_stmt 0 view .LVU94
 351 0032 4FF48053 		mov	r3, #4096
 352 0036 0493     		str	r3, [sp, #16]
 335:Src/main.c    ****   {
 353              		.loc 1 335 3 is_stmt 1 view .LVU95
 335:Src/main.c    ****   {
 354              		.loc 1 335 7 is_stmt 0 view .LVU96
 355 0038 04A9     		add	r1, sp, #16
 356 003a 2846     		mov	r0, r5
 357 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 358              	.LVL8:
 339:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359              		.loc 1 339 3 is_stmt 1 view .LVU97
 339:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 360              		.loc 1 339 37 is_stmt 0 view .LVU98
 361 0040 0194     		str	r4, [sp, #4]
 340:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 362              		.loc 1 340 3 is_stmt 1 view .LVU99
 340:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 363              		.loc 1 340 33 is_stmt 0 view .LVU100
 364 0042 0394     		str	r4, [sp, #12]
 341:Src/main.c    ****   {
 365              		.loc 1 341 3 is_stmt 1 view .LVU101
 341:Src/main.c    ****   {
 366              		.loc 1 341 7 is_stmt 0 view .LVU102
 367 0044 01A9     		add	r1, sp, #4
 368 0046 2846     		mov	r0, r5
 369 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 370              	.LVL9:
 349:Src/main.c    **** 
 371              		.loc 1 349 1 view .LVU103
 372 004c 09B0     		add	sp, sp, #36
 373              	.LCFI9:
 374              		.cfi_def_cfa_offset 12
 375              		@ sp needed
 376 004e 30BD     		pop	{r4, r5, pc}
 377              	.L16:
 378              		.align	2
 379              	.L15:
 380 0050 00000000 		.word	.LANCHOR1
 381              		.cfi_endproc
 382              	.LFE855:
 384              		.section	.text.MX_UART4_Init,"ax",%progbits
 385              		.align	1
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv5-d16
 391              	MX_UART4_Init:
 392              	.LFB856:
 357:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 17


 393              		.loc 1 357 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI10:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 366:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 402              		.loc 1 366 3 view .LVU105
 366:Src/main.c    ****   huart4.Init.BaudRate = 115200;
 403              		.loc 1 366 19 is_stmt 0 view .LVU106
 404 0002 0948     		ldr	r0, .L19
 405 0004 094B     		ldr	r3, .L19+4
 406 0006 0360     		str	r3, [r0]
 367:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 407              		.loc 1 367 3 is_stmt 1 view .LVU107
 367:Src/main.c    ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 408              		.loc 1 367 24 is_stmt 0 view .LVU108
 409 0008 4FF4E133 		mov	r3, #115200
 410 000c 4360     		str	r3, [r0, #4]
 368:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 411              		.loc 1 368 3 is_stmt 1 view .LVU109
 368:Src/main.c    ****   huart4.Init.StopBits = UART_STOPBITS_1;
 412              		.loc 1 368 26 is_stmt 0 view .LVU110
 413 000e 0023     		movs	r3, #0
 414 0010 8360     		str	r3, [r0, #8]
 369:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 415              		.loc 1 369 3 is_stmt 1 view .LVU111
 369:Src/main.c    ****   huart4.Init.Parity = UART_PARITY_NONE;
 416              		.loc 1 369 24 is_stmt 0 view .LVU112
 417 0012 C360     		str	r3, [r0, #12]
 370:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 418              		.loc 1 370 3 is_stmt 1 view .LVU113
 370:Src/main.c    ****   huart4.Init.Mode = UART_MODE_TX_RX;
 419              		.loc 1 370 22 is_stmt 0 view .LVU114
 420 0014 0361     		str	r3, [r0, #16]
 371:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 421              		.loc 1 371 3 is_stmt 1 view .LVU115
 371:Src/main.c    ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 422              		.loc 1 371 20 is_stmt 0 view .LVU116
 423 0016 0C22     		movs	r2, #12
 424 0018 4261     		str	r2, [r0, #20]
 372:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 425              		.loc 1 372 3 is_stmt 1 view .LVU117
 372:Src/main.c    ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 426              		.loc 1 372 25 is_stmt 0 view .LVU118
 427 001a 8361     		str	r3, [r0, #24]
 373:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 428              		.loc 1 373 3 is_stmt 1 view .LVU119
 373:Src/main.c    ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 429              		.loc 1 373 28 is_stmt 0 view .LVU120
 430 001c C361     		str	r3, [r0, #28]
 374:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 431              		.loc 1 374 3 is_stmt 1 view .LVU121
 374:Src/main.c    ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 18


 432              		.loc 1 374 30 is_stmt 0 view .LVU122
 433 001e 0362     		str	r3, [r0, #32]
 375:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 434              		.loc 1 375 3 is_stmt 1 view .LVU123
 375:Src/main.c    ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 435              		.loc 1 375 38 is_stmt 0 view .LVU124
 436 0020 4362     		str	r3, [r0, #36]
 376:Src/main.c    ****   {
 437              		.loc 1 376 3 is_stmt 1 view .LVU125
 376:Src/main.c    ****   {
 438              		.loc 1 376 7 is_stmt 0 view .LVU126
 439 0022 FFF7FEFF 		bl	HAL_UART_Init
 440              	.LVL10:
 384:Src/main.c    **** 
 441              		.loc 1 384 1 view .LVU127
 442 0026 08BD     		pop	{r3, pc}
 443              	.L20:
 444              		.align	2
 445              	.L19:
 446 0028 00000000 		.word	.LANCHOR2
 447 002c 004C0040 		.word	1073761280
 448              		.cfi_endproc
 449              	.LFE856:
 451              		.section	.text.MX_UART7_Init,"ax",%progbits
 452              		.align	1
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv5-d16
 458              	MX_UART7_Init:
 459              	.LFB857:
 392:Src/main.c    **** 
 460              		.loc 1 392 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 08B5     		push	{r3, lr}
 465              	.LCFI11:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 3, -8
 468              		.cfi_offset 14, -4
 401:Src/main.c    ****   huart7.Init.BaudRate = 100000;
 469              		.loc 1 401 3 view .LVU129
 401:Src/main.c    ****   huart7.Init.BaudRate = 100000;
 470              		.loc 1 401 19 is_stmt 0 view .LVU130
 471 0002 0A48     		ldr	r0, .L23
 472 0004 0A4B     		ldr	r3, .L23+4
 473 0006 0360     		str	r3, [r0]
 402:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_9B;
 474              		.loc 1 402 3 is_stmt 1 view .LVU131
 402:Src/main.c    ****   huart7.Init.WordLength = UART_WORDLENGTH_9B;
 475              		.loc 1 402 24 is_stmt 0 view .LVU132
 476 0008 0A4B     		ldr	r3, .L23+8
 477 000a 4360     		str	r3, [r0, #4]
 403:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
 478              		.loc 1 403 3 is_stmt 1 view .LVU133
 403:Src/main.c    ****   huart7.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 19


 479              		.loc 1 403 26 is_stmt 0 view .LVU134
 480 000c 4FF48053 		mov	r3, #4096
 481 0010 8360     		str	r3, [r0, #8]
 404:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 482              		.loc 1 404 3 is_stmt 1 view .LVU135
 404:Src/main.c    ****   huart7.Init.Parity = UART_PARITY_NONE;
 483              		.loc 1 404 24 is_stmt 0 view .LVU136
 484 0012 0023     		movs	r3, #0
 485 0014 C360     		str	r3, [r0, #12]
 405:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 486              		.loc 1 405 3 is_stmt 1 view .LVU137
 405:Src/main.c    ****   huart7.Init.Mode = UART_MODE_TX_RX;
 487              		.loc 1 405 22 is_stmt 0 view .LVU138
 488 0016 0361     		str	r3, [r0, #16]
 406:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 489              		.loc 1 406 3 is_stmt 1 view .LVU139
 406:Src/main.c    ****   huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 490              		.loc 1 406 20 is_stmt 0 view .LVU140
 491 0018 0C22     		movs	r2, #12
 492 001a 4261     		str	r2, [r0, #20]
 407:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 493              		.loc 1 407 3 is_stmt 1 view .LVU141
 407:Src/main.c    ****   huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 494              		.loc 1 407 25 is_stmt 0 view .LVU142
 495 001c 8361     		str	r3, [r0, #24]
 408:Src/main.c    ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 496              		.loc 1 408 3 is_stmt 1 view .LVU143
 408:Src/main.c    ****   huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 497              		.loc 1 408 28 is_stmt 0 view .LVU144
 498 001e C361     		str	r3, [r0, #28]
 409:Src/main.c    ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 499              		.loc 1 409 3 is_stmt 1 view .LVU145
 409:Src/main.c    ****   huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 500              		.loc 1 409 30 is_stmt 0 view .LVU146
 501 0020 0362     		str	r3, [r0, #32]
 410:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 502              		.loc 1 410 3 is_stmt 1 view .LVU147
 410:Src/main.c    ****   if (HAL_UART_Init(&huart7) != HAL_OK)
 503              		.loc 1 410 38 is_stmt 0 view .LVU148
 504 0022 4362     		str	r3, [r0, #36]
 411:Src/main.c    ****   {
 505              		.loc 1 411 3 is_stmt 1 view .LVU149
 411:Src/main.c    ****   {
 506              		.loc 1 411 7 is_stmt 0 view .LVU150
 507 0024 FFF7FEFF 		bl	HAL_UART_Init
 508              	.LVL11:
 419:Src/main.c    **** 
 509              		.loc 1 419 1 view .LVU151
 510 0028 08BD     		pop	{r3, pc}
 511              	.L24:
 512 002a 00BF     		.align	2
 513              	.L23:
 514 002c 00000000 		.word	.LANCHOR3
 515 0030 00780040 		.word	1073772544
 516 0034 A0860100 		.word	100000
 517              		.cfi_endproc
 518              	.LFE857:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 20


 520              		.section	.text.MX_TIM1_Init,"ax",%progbits
 521              		.align	1
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv5-d16
 527              	MX_TIM1_Init:
 528              	.LFB854:
 275:Src/main.c    **** 
 529              		.loc 1 275 1 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 24
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 10B5     		push	{r4, lr}
 534              	.LCFI12:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 4, -8
 537              		.cfi_offset 14, -4
 538 0002 86B0     		sub	sp, sp, #24
 539              	.LCFI13:
 540              		.cfi_def_cfa_offset 32
 281:Src/main.c    **** 
 541              		.loc 1 281 3 view .LVU153
 281:Src/main.c    **** 
 542              		.loc 1 281 22 is_stmt 0 view .LVU154
 543 0004 0023     		movs	r3, #0
 544 0006 0193     		str	r3, [sp, #4]
 545 0008 0293     		str	r3, [sp, #8]
 546 000a 0393     		str	r3, [sp, #12]
 547 000c 0493     		str	r3, [sp, #16]
 548 000e 0593     		str	r3, [sp, #20]
 284:Src/main.c    **** 
 549              		.loc 1 284 3 is_stmt 1 view .LVU155
 550              	.LVL12:
 551              	.LBB42:
 552              	.LBI42:
 553              		.file 2 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h"
   1:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @file    stm32f7xx_ll_bus.h
   4:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
   7:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  17:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 21


  21:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  22:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @attention
  25:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
  26:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  27:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
  29:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
  34:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  36:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  37:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #ifndef __STM32F7xx_LL_BUS_H
  39:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define __STM32F7xx_LL_BUS_H
  40:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  41:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif
  44:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  45:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #include "stm32f7xx.h"
  47:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  48:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @addtogroup STM32F7xx_LL_Driver
  49:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  50:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  51:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  52:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  54:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  56:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  57:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  58:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  62:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  63:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  64:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  65:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  66:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  67:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
  68:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  69:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
  70:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
  71:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL             0xFFFFFFFFU
  72:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOA           RCC_AHB1ENR_GPIOAEN
  73:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOB           RCC_AHB1ENR_GPIOBEN
  74:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOC           RCC_AHB1ENR_GPIOCEN
  75:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOD           RCC_AHB1ENR_GPIODEN
  76:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOE           RCC_AHB1ENR_GPIOEEN
  77:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOF           RCC_AHB1ENR_GPIOFEN
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 22


  78:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOG           RCC_AHB1ENR_GPIOGEN
  79:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOH           RCC_AHB1ENR_GPIOHEN
  80:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOI           RCC_AHB1ENR_GPIOIEN
  81:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(GPIOJ)
  82:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOJ           RCC_AHB1ENR_GPIOJEN
  83:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* GPIOJ */
  84:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(GPIOK)
  85:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_GPIOK           RCC_AHB1ENR_GPIOKEN
  86:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* GPIOK */
  87:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC             RCC_AHB1ENR_CRCEN
  88:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_BKPSRAM         RCC_AHB1ENR_BKPSRAMEN
  89:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DTCMRAM         RCC_AHB1ENR_DTCMRAMEN
  90:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1            RCC_AHB1ENR_DMA1EN
  91:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2            RCC_AHB1ENR_DMA2EN
  92:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DMA2D)
  93:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2D           RCC_AHB1ENR_DMA2DEN
  94:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DMA2D */
  95:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(ETH)
  96:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMAC          RCC_AHB1ENR_ETHMACEN
  97:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACTX        RCC_AHB1ENR_ETHMACTXEN
  98:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACRX        RCC_AHB1ENR_ETHMACRXEN
  99:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACPTP       RCC_AHB1ENR_ETHMACPTPEN
 100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* ETH */
 101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGHS           RCC_AHB1ENR_OTGHSEN
 102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGHSULPI       RCC_AHB1ENR_OTGHSULPIEN
 103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_AXI             RCC_AHB1LPENR_AXILPEN
 104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLITF           RCC_AHB1LPENR_FLITFLPEN
 105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM1           RCC_AHB1LPENR_SRAM1LPEN
 106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM2           RCC_AHB1LPENR_SRAM2LPEN
 107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB2_GRP1_PERIPH  AHB2 GRP1 PERIPH
 112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DCMI)
 116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_DCMI           RCC_AHB2ENR_DCMIEN
 117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DCMI */
 118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(JPEG)
 119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_JPEG           RCC_AHB2ENR_JPEGEN
 120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* JPEG */
 121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CRYP) 
 122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_CRYP           RCC_AHB2ENR_CRYPEN
 123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CRYP */
 124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(AES)
 125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_AES            RCC_AHB2ENR_AESEN
 126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* AES */
 127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(HASH)
 128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_HASH           RCC_AHB2ENR_HASHEN
 129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* HASH */
 130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_RNG            RCC_AHB2ENR_RNGEN
 131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB2_GRP1_PERIPH_OTGFS          RCC_AHB2ENR_OTGFSEN
 132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 23


 135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB3_GRP1_PERIPH  AHB3 GRP1 PERIPH
 137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_ALL            0xFFFFFFFFU
 140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_FMC            RCC_AHB3ENR_FMCEN
 141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_AHB3_GRP1_PERIPH_QSPI           RCC_AHB3ENR_QSPIEN
 142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
 150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR_TIM4EN
 153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR_TIM5EN
 154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM12          RCC_APB1ENR_TIM12EN
 157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM13          RCC_APB1ENR_TIM13EN
 158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN
 160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR_SPI3EN
 163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(SPDIFRX)
 164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPDIFRX        RCC_APB1ENR_SPDIFRXEN
 165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* SPDIFRX */
 166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR_UART4EN
 169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR_UART5EN
 170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN
 173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(I2C4)
 174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C4           RCC_APB1ENR_I2C4EN
 175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* I2C4 */
 176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR_CAN1EN
 177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CAN2)
 178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR_CAN2EN
 179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CAN2 */
 180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CAN3)
 181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN3           RCC_APB1ENR_CAN3EN
 182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CAN3 */
 183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(CEC)
 184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* CEC */
 186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART7          RCC_APB1ENR_UART7EN
 189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART8          RCC_APB1ENR_UART8EN
 190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(RCC_APB1ENR_RTCEN)
 191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTCAPB         RCC_APB1ENR_RTCEN
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 24


 192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* RCC_APB1ENR_RTCEN */
 193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL          0xFFFFFFFFU
 201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1         RCC_APB2ENR_TIM1EN
 202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8         RCC_APB2ENR_TIM8EN
 203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1       RCC_APB2ENR_USART1EN
 204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART6       RCC_APB2ENR_USART6EN
 205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1         RCC_APB2ENR_ADC1EN
 206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC2         RCC_APB2ENR_ADC2EN
 207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC3         RCC_APB2ENR_ADC3EN
 208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC1       RCC_APB2ENR_SDMMC1EN
 209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(SDMMC2)
 210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SDMMC2       RCC_APB2ENR_SDMMC2EN
 211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* SDMMC2 */
 212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1         RCC_APB2ENR_SPI1EN
 213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI4         RCC_APB2ENR_SPI4EN
 214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG       RCC_APB2ENR_SYSCFGEN
 215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM9         RCC_APB2ENR_TIM9EN
 216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM10        RCC_APB2ENR_TIM10EN
 217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM11        RCC_APB2ENR_TIM11EN
 218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI5         RCC_APB2ENR_SPI5EN
 219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(SPI6)
 220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI6         RCC_APB2ENR_SPI6EN
 221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* SPI6 */
 222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI1         RCC_APB2ENR_SAI1EN
 223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SAI2         RCC_APB2ENR_SAI2EN
 224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(LTDC)
 225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_LTDC         RCC_APB2ENR_LTDCEN
 226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* LTDC */
 227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DSI)
 228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DSI          RCC_APB2ENR_DSIEN
 229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DSI */
 230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(DFSDM1_Channel0)
 231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DFSDM1       RCC_APB2ENR_DFSDM1EN
 232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* DFSDM1_Channel0 */
 233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(MDIOS)
 234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_MDIO         RCC_APB2ENR_MDIOEN
 235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* MDIOS */
 236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #if defined(USB_HS_PHYC)
 237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_OTGPHYC      RCC_APB2ENR_OTGPHYCEN
 238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #endif /* USB_HS_PHYC */
 239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC          RCC_APB2RSTR_ADCRST
 240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 25


 249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1ENR      GPIOAEN            LL_AHB1_GRP1_EnableClock\n
 261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOBEN            LL_AHB1_GRP1_EnableClock\n
 262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOCEN            LL_AHB1_GRP1_EnableClock\n
 263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIODEN            LL_AHB1_GRP1_EnableClock\n
 264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOEEN            LL_AHB1_GRP1_EnableClock\n
 265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOFEN            LL_AHB1_GRP1_EnableClock\n
 266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOGEN            LL_AHB1_GRP1_EnableClock\n
 267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOHEN            LL_AHB1_GRP1_EnableClock\n
 268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOIEN            LL_AHB1_GRP1_EnableClock\n
 269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOJEN            LL_AHB1_GRP1_EnableClock\n
 270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOKEN            LL_AHB1_GRP1_EnableClock\n
 271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      CRCEN              LL_AHB1_GRP1_EnableClock\n
 272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      BKPSRAMEN          LL_AHB1_GRP1_EnableClock\n
 273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DTCMRAMEN          LL_AHB1_GRP1_EnableClock\n
 274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA1EN             LL_AHB1_GRP1_EnableClock\n
 275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2EN             LL_AHB1_GRP1_EnableClock\n
 276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN            LL_AHB1_GRP1_EnableClock\n
 277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACEN           LL_AHB1_GRP1_EnableClock\n
 278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACTXEN         LL_AHB1_GRP1_EnableClock\n
 279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACRXEN         LL_AHB1_GRP1_EnableClock\n
 280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACPTPEN        LL_AHB1_GRP1_EnableClock\n
 281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSEN            LL_AHB1_GRP1_EnableClock\n
 282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSULPIEN        LL_AHB1_GRP1_EnableClock
 283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 26


 306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB1ENR, Periphs);
 315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1ENR      GPIOAEN            LL_AHB1_GRP1_IsEnabledClock\n
 323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOBEN            LL_AHB1_GRP1_IsEnabledClock\n
 324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOCEN            LL_AHB1_GRP1_IsEnabledClock\n
 325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIODEN            LL_AHB1_GRP1_IsEnabledClock\n
 326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOEEN            LL_AHB1_GRP1_IsEnabledClock\n
 327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOFEN            LL_AHB1_GRP1_IsEnabledClock\n
 328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOGEN            LL_AHB1_GRP1_IsEnabledClock\n
 329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOHEN            LL_AHB1_GRP1_IsEnabledClock\n
 330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOIEN            LL_AHB1_GRP1_IsEnabledClock\n
 331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOJEN            LL_AHB1_GRP1_IsEnabledClock\n
 332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOKEN            LL_AHB1_GRP1_IsEnabledClock\n
 333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      CRCEN              LL_AHB1_GRP1_IsEnabledClock\n
 334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      BKPSRAMEN          LL_AHB1_GRP1_IsEnabledClock\n
 335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DTCMRAMEN          LL_AHB1_GRP1_IsEnabledClock\n
 336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA1EN             LL_AHB1_GRP1_IsEnabledClock\n
 337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2EN             LL_AHB1_GRP1_IsEnabledClock\n
 338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN            LL_AHB1_GRP1_IsEnabledClock\n
 339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACEN           LL_AHB1_GRP1_IsEnabledClock\n
 340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACTXEN         LL_AHB1_GRP1_IsEnabledClock\n
 341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACRXEN         LL_AHB1_GRP1_IsEnabledClock\n
 342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACPTPEN        LL_AHB1_GRP1_IsEnabledClock\n
 343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSEN            LL_AHB1_GRP1_IsEnabledClock\n
 344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSULPIENDEN     LL_AHB1_GRP1_IsEnabledClock
 345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 27


 363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->AHB1ENR, Periphs) == Periphs);
 376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1ENR      GPIOAEN            LL_AHB1_GRP1_DisableClock\n
 381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOBEN            LL_AHB1_GRP1_DisableClock\n
 382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOCEN            LL_AHB1_GRP1_DisableClock\n
 383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIODEN            LL_AHB1_GRP1_DisableClock\n
 384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOEEN            LL_AHB1_GRP1_DisableClock\n
 385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOFEN            LL_AHB1_GRP1_DisableClock\n
 386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOGEN            LL_AHB1_GRP1_DisableClock\n
 387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOHEN            LL_AHB1_GRP1_DisableClock\n
 388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOIEN            LL_AHB1_GRP1_DisableClock\n
 389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOJEN            LL_AHB1_GRP1_DisableClock\n
 390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      GPIOKEN            LL_AHB1_GRP1_DisableClock\n
 391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      CRCEN              LL_AHB1_GRP1_DisableClock\n
 392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      BKPSRAMEN          LL_AHB1_GRP1_DisableClock\n
 393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DTCMRAMEN          LL_AHB1_GRP1_DisableClock\n
 394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA1EN             LL_AHB1_GRP1_DisableClock\n
 395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2EN             LL_AHB1_GRP1_DisableClock\n
 396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      DMA2DEN            LL_AHB1_GRP1_DisableClock\n
 397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACEN           LL_AHB1_GRP1_DisableClock\n
 398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACTXEN         LL_AHB1_GRP1_DisableClock\n
 399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACRXEN         LL_AHB1_GRP1_DisableClock\n
 400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      ETHMACPTPEN        LL_AHB1_GRP1_DisableClock\n
 401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSEN            LL_AHB1_GRP1_DisableClock\n
 402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1ENR      OTGHSULPIENDEN     LL_AHB1_GRP1_DisableClock
 403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 28


 420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1ENR, Periphs);
 434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1RSTR     GPIOARST      LL_AHB1_GRP1_ForceReset\n
 439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOBRST      LL_AHB1_GRP1_ForceReset\n
 440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOCRST      LL_AHB1_GRP1_ForceReset\n
 441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIODRST      LL_AHB1_GRP1_ForceReset\n
 442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOERST      LL_AHB1_GRP1_ForceReset\n
 443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOFRST      LL_AHB1_GRP1_ForceReset\n
 444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOGRST      LL_AHB1_GRP1_ForceReset\n
 445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOHRST      LL_AHB1_GRP1_ForceReset\n
 446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOIRST      LL_AHB1_GRP1_ForceReset\n
 447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOJRST      LL_AHB1_GRP1_ForceReset\n
 448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOKRST      LL_AHB1_GRP1_ForceReset\n
 449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ForceReset\n
 450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ForceReset\n
 451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ForceReset\n
 452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ForceReset\n
 453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     ETHMACRST     LL_AHB1_GRP1_ForceReset\n
 454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     OTGHSRST      LL_AHB1_GRP1_ForceReset
 455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 29


 477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB1RSTR, Periphs);
 481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1RSTR     GPIOARST      LL_AHB1_GRP1_ReleaseReset\n
 486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOBRST      LL_AHB1_GRP1_ReleaseReset\n
 487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOCRST      LL_AHB1_GRP1_ReleaseReset\n
 488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIODRST      LL_AHB1_GRP1_ReleaseReset\n
 489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOERST      LL_AHB1_GRP1_ReleaseReset\n
 490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOFRST      LL_AHB1_GRP1_ReleaseReset\n
 491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOGRST      LL_AHB1_GRP1_ReleaseReset\n
 492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOHRST      LL_AHB1_GRP1_ReleaseReset\n
 493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOIRST      LL_AHB1_GRP1_ReleaseReset\n
 494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOJRST      LL_AHB1_GRP1_ReleaseReset\n
 495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     GPIOKRST      LL_AHB1_GRP1_ReleaseReset\n
 496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2RST       LL_AHB1_GRP1_ReleaseReset\n
 499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     DMA2DRST      LL_AHB1_GRP1_ReleaseReset\n
 500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     ETHMACRST     LL_AHB1_GRP1_ReleaseReset\n
 501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1RSTR     OTGHSRST      LL_AHB1_GRP1_ReleaseReset
 502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1RSTR, Periphs);
 528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in low-power mode
 532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1LPENR    GPIOALPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOBLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 30


 534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOCLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIODLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOELPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOFLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOGLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOHLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOILPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOJLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOKLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    CRCLPEN        LL_AHB1_GRP1_EnableClockLowPower\n
 544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    AXILPEN        LL_AHB1_GRP1_EnableClockLowPower\n
 545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    FLITFLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM1LPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM2LPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    BKPSRAMLPEN    LL_AHB1_GRP1_EnableClockLowPower\n
 549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DTCMRAMLPEN    LL_AHB1_GRP1_EnableClockLowPower\n
 550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA1LPEN       LL_AHB1_GRP1_EnableClockLowPower\n
 551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2LPEN       LL_AHB1_GRP1_EnableClockLowPower\n
 552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2DLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACLPEN     LL_AHB1_GRP1_EnableClockLowPower\n
 554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACTXLPEN   LL_AHB1_GRP1_EnableClockLowPower\n
 555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACRXLPEN   LL_AHB1_GRP1_EnableClockLowPower\n
 556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACPTPLPEN  LL_AHB1_GRP1_EnableClockLowPower\n
 557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSLPEN      LL_AHB1_GRP1_EnableClockLowPower\n
 558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSULPILPEN  LL_AHB1_GRP1_EnableClockLowPower
 559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_AXI
 573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLITF
 574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM2
 576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
 578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 31


 591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockLowPower(uint32_t Periphs)
 592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB1LPENR, Periphs);
 595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB1LPENR, Periphs);
 597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in low-power mode
 602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB1LPENR    GPIOALPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOBLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOCLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIODLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOELPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOFLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOGLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOHLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOILPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOJLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    GPIOKLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    CRCLPEN        LL_AHB1_GRP1_DisableClockLowPower\n
 614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    AXILPEN        LL_AHB1_GRP1_DisableClockLowPower\n
 615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    FLITFLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM1LPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    SRAM2LPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    BKPSRAMLPEN    LL_AHB1_GRP1_DisableClockLowPower\n
 619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DTCMRAMLPEN    LL_AHB1_GRP1_DisableClockLowPower\n
 620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA1LPEN       LL_AHB1_GRP1_DisableClockLowPower\n
 621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2LPEN       LL_AHB1_GRP1_DisableClockLowPower\n
 622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    DMA2DLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACLPEN     LL_AHB1_GRP1_DisableClockLowPower\n
 624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACTXLPEN   LL_AHB1_GRP1_DisableClockLowPower\n
 625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACRXLPEN   LL_AHB1_GRP1_DisableClockLowPower\n
 626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    ETHMACPTPLPEN  LL_AHB1_GRP1_DisableClockLowPower\n
 627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSLPEN      LL_AHB1_GRP1_DisableClockLowPower\n
 628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB1LPENR    OTGHSULPILPEN  LL_AHB1_GRP1_DisableClockLowPower
 629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOA
 631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOB
 632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOC
 633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOD
 634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOE
 635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOF
 636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOG
 637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOH
 638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOI
 639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOJ (*)
 640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_GPIOK (*)
 641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_AXI
 643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLITF
 644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM1
 645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM2
 646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_BKPSRAM
 647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DTCMRAM
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 32


 648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2
 650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2D (*)
 651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACPTP (*)
 655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHS
 656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGHSULPI
 657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockLowPower(uint32_t Periphs)
 662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB1LPENR, Periphs);
 664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB2 AHB2
 671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB2 peripherals clock.
 676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2ENR      DCMIEN       LL_AHB2_GRP1_EnableClock\n
 677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      JPEGEN       LL_AHB2_GRP1_EnableClock\n
 678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      CRYPEN       LL_AHB2_GRP1_EnableClock\n
 679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      AESEN        LL_AHB2_GRP1_EnableClock\n
 680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      HASHEN       LL_AHB2_GRP1_EnableClock\n
 681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      RNGEN        LL_AHB2_GRP1_EnableClock\n
 682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN      LL_AHB2_GRP1_EnableClock
 683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
 696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB2ENR, Periphs);
 699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 33


 705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if AHB2 peripheral clock is enabled or not
 706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2ENR      DCMIEN       LL_AHB2_GRP1_IsEnabledClock\n
 707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      JPEGEN       LL_AHB2_GRP1_IsEnabledClock\n
 708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      CRYPEN       LL_AHB2_GRP1_IsEnabledClock\n
 709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      AESEN        LL_AHB2_GRP1_IsEnabledClock\n
 710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      HASHEN       LL_AHB2_GRP1_IsEnabledClock\n
 711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      RNGEN        LL_AHB2_GRP1_IsEnabledClock\n
 712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN      LL_AHB2_GRP1_IsEnabledClock
 713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB2_GRP1_IsEnabledClock(uint32_t Periphs)
 726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->AHB2ENR, Periphs) == Periphs);
 728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB2 peripherals clock.
 732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2ENR      DCMIEN       LL_AHB2_GRP1_DisableClock\n
 733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      JPEGEN       LL_AHB2_GRP1_DisableClock\n
 734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      CRYPEN       LL_AHB2_GRP1_DisableClock\n
 735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      AESEN        LL_AHB2_GRP1_DisableClock\n
 736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      HASHEN       LL_AHB2_GRP1_DisableClock\n
 737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      RNGEN        LL_AHB2_GRP1_DisableClock\n
 738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2ENR      OTGFSEN      LL_AHB2_GRP1_DisableClock
 739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClock(uint32_t Periphs)
 752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2ENR, Periphs);
 754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force AHB2 peripherals reset.
 758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2RSTR     DCMIRST      LL_AHB2_GRP1_ForceReset\n
 759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     JPEGRST      LL_AHB2_GRP1_ForceReset\n
 760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     CRYPRST      LL_AHB2_GRP1_ForceReset\n
 761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     AESRST       LL_AHB2_GRP1_ForceReset\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 34


 762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     HASHRST      LL_AHB2_GRP1_ForceReset\n
 763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     RNGRST       LL_AHB2_GRP1_ForceReset\n
 764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST     LL_AHB2_GRP1_ForceReset
 765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ForceReset(uint32_t Periphs)
 779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB2RSTR, Periphs);
 781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release AHB2 peripherals reset.
 785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2RSTR     DCMIRST      LL_AHB2_GRP1_ReleaseReset\n
 786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     JPEGRST      LL_AHB2_GRP1_ReleaseReset\n
 787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     CRYPRST      LL_AHB2_GRP1_ReleaseReset\n
 788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     AESRST       LL_AHB2_GRP1_ReleaseReset\n
 789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     HASHRST      LL_AHB2_GRP1_ReleaseReset\n
 790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     RNGRST       LL_AHB2_GRP1_ReleaseReset\n
 791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2RSTR     OTGFSRST     LL_AHB2_GRP1_ReleaseReset
 792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_ReleaseReset(uint32_t Periphs)
 806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2RSTR, Periphs);
 808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB2 peripheral clocks in low-power mode
 812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2LPENR    DCMILPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    JPEGLPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    CRYPLPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    AESLPEN      LL_AHB2_GRP1_EnableClockLowPower\n
 816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    HASHLPEN     LL_AHB2_GRP1_EnableClockLowPower\n
 817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    RNGLPEN      LL_AHB2_GRP1_EnableClockLowPower\n
 818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    OTGFSLPEN    LL_AHB2_GRP1_EnableClockLowPower
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 35


 819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_EnableClockLowPower(uint32_t Periphs)
 832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB2LPENR, Periphs);
 835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB2LPENR, Periphs);
 837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB2 peripheral clocks in low-power mode
 842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB2LPENR    DCMILPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    JPEGLPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    CRYPLPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    AESLPEN      LL_AHB2_GRP1_DisableClockLowPower\n
 846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    HASHLPEN     LL_AHB2_GRP1_DisableClockLowPower\n
 847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    RNGLPEN      LL_AHB2_GRP1_DisableClockLowPower\n
 848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB2LPENR    OTGFSLPEN    LL_AHB2_GRP1_DisableClockLowPower
 849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_DCMI (*)
 851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_JPEG (*)
 852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_CRYP (*)
 853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_AES  (*)
 854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_HASH (*)
 855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_RNG
 856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_OTGFS
 857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB2_GRP1_DisableClockLowPower(uint32_t Periphs)
 862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB2LPENR, Periphs);
 864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB3 AHB3
 871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
 872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB3 peripherals clock.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 36


 876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_EnableClock\n
 877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_EnableClock
 878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClock(uint32_t Periphs)
 886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB3ENR, Periphs);
 889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3ENR, Periphs);
 891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if AHB3 peripheral clock is enabled or not
 896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_IsEnabledClock\n
 897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_IsEnabledClock
 898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB3_GRP1_IsEnabledClock(uint32_t Periphs)
 906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->AHB3ENR, Periphs) == Periphs);
 908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB3 peripherals clock.
 912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3ENR      FMCEN         LL_AHB3_GRP1_DisableClock\n
 913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3ENR      QSPIEN        LL_AHB3_GRP1_DisableClock
 914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClock(uint32_t Periphs)
 922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3ENR, Periphs);
 924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force AHB3 peripherals reset.
 928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ForceReset\n
 929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ForceReset
 930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_ALL
 932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 37


 933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ForceReset(uint32_t Periphs)
 939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB3RSTR, Periphs);
 941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release AHB3 peripherals reset.
 945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3RSTR     FMCRST        LL_AHB3_GRP1_ReleaseReset\n
 946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3RSTR     QSPIRST       LL_AHB3_GRP1_ReleaseReset
 947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB2_GRP1_PERIPH_ALL
 949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_ReleaseReset(uint32_t Periphs)
 956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3RSTR, Periphs);
 958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable AHB3 peripheral clocks in low-power mode
 962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3LPENR    FMCLPEN       LL_AHB3_GRP1_EnableClockLowPower\n
 963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3LPENR    QSPILPEN      LL_AHB3_GRP1_EnableClockLowPower
 964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
 970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_EnableClockLowPower(uint32_t Periphs)
 972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->AHB3LPENR, Periphs);
 975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHB3LPENR, Periphs);
 977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable AHB3 peripheral clocks in low-power mode
 982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll AHB3LPENR    FMCLPEN       LL_AHB3_GRP1_DisableClockLowPower\n
 983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         AHB3LPENR    QSPILPEN      LL_AHB3_GRP1_DisableClockLowPower
 984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_FMC (*)
 986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_AHB3_GRP1_PERIPH_QSPI
 987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
 988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
 989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 38


 990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
 991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_AHB3_GRP1_DisableClockLowPower(uint32_t Periphs)
 992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
 993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->AHB3LPENR, Periphs);
 994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
 995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
 996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
 997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
 998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
 999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
1001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
1002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
1003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
1006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
1007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
1008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM4EN        LL_APB1_GRP1_EnableClock\n
1009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM5EN        LL_APB1_GRP1_EnableClock\n
1010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
1011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
1012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM12EN       LL_APB1_GRP1_EnableClock\n
1013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM13EN       LL_APB1_GRP1_EnableClock\n
1014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM14EN       LL_APB1_GRP1_EnableClock\n
1015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock\n
1016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
1017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
1018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI3EN        LL_APB1_GRP1_EnableClock\n
1019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPDIFRXEN     LL_APB1_GRP1_EnableClock\n
1020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
1021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART3EN      LL_APB1_GRP1_EnableClock\n
1022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART4EN       LL_APB1_GRP1_EnableClock\n
1023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART5EN       LL_APB1_GRP1_EnableClock\n
1024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
1025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
1026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
1027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C4EN        LL_APB1_GRP1_EnableClock\n
1028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN1EN        LL_APB1_GRP1_EnableClock\n
1029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN2EN        LL_APB1_GRP1_EnableClock\n
1030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN3EN        LL_APB1_GRP1_EnableClock\n
1031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CECEN         LL_APB1_GRP1_EnableClock\n
1032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
1033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
1034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART7EN       LL_APB1_GRP1_EnableClock\n
1035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART8EN       LL_APB1_GRP1_EnableClock\n
1036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     RTCEN         LL_APB1_GRP1_EnableClock
1037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 39


1047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
1074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
1076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
1077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
1079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
1080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
1084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
1085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
1086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
1087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
1088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
1089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
1090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM12EN       LL_APB1_GRP1_IsEnabledClock\n
1091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM13EN       LL_APB1_GRP1_IsEnabledClock\n
1092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
1093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock\n
1094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
1095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
1096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
1097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPDIFRXEN     LL_APB1_GRP1_IsEnabledClock\n
1098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
1099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART3EN      LL_APB1_GRP1_IsEnabledClock\n
1100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART4EN       LL_APB1_GRP1_IsEnabledClock\n
1101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART5EN       LL_APB1_GRP1_IsEnabledClock\n
1102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
1103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 40


1104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
1105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C4EN        LL_APB1_GRP1_IsEnabledClock\n
1106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN1EN        LL_APB1_GRP1_IsEnabledClock\n
1107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN2EN        LL_APB1_GRP1_IsEnabledClock\n
1108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN3EN        LL_APB1_GRP1_IsEnabledClock\n
1109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CECEN         LL_APB1_GRP1_IsEnabledClock\n
1110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
1111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
1112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART7EN       LL_APB1_GRP1_IsEnabledClock\n
1113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART8EN       LL_APB1_GRP1_IsEnabledClock\n
1114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     RTCEN         LL_APB1_GRP1_IsEnabledClock
1115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
1150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
1152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
1154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
1158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
1159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
1160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM4EN        LL_APB1_GRP1_DisableClock\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 41


1161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM5EN        LL_APB1_GRP1_DisableClock\n
1162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
1163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
1164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM12EN       LL_APB1_GRP1_DisableClock\n
1165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM13EN       LL_APB1_GRP1_DisableClock\n
1166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     TIM14EN       LL_APB1_GRP1_DisableClock\n
1167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock\n
1168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
1169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
1170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPI3EN        LL_APB1_GRP1_DisableClock\n
1171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     SPDIFRXEN     LL_APB1_GRP1_DisableClock\n
1172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
1173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     USART3EN      LL_APB1_GRP1_DisableClock\n
1174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART4EN       LL_APB1_GRP1_DisableClock\n
1175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART5EN       LL_APB1_GRP1_DisableClock\n
1176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
1177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
1178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
1179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     I2C4EN        LL_APB1_GRP1_DisableClock\n
1180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN1EN        LL_APB1_GRP1_DisableClock\n
1181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN2EN        LL_APB1_GRP1_DisableClock\n
1182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CAN3EN        LL_APB1_GRP1_DisableClock\n
1183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     CECEN         LL_APB1_GRP1_DisableClock\n
1184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
1185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
1186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART7EN       LL_APB1_GRP1_DisableClock\n
1187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     UART8EN       LL_APB1_GRP1_DisableClock\n
1188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1ENR     RTCEN         LL_APB1_GRP1_DisableClock
1189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 42


1218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
1226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
1228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
1232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
1233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
1234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM4RST        LL_APB1_GRP1_ForceReset\n
1235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM5RST        LL_APB1_GRP1_ForceReset\n
1236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
1237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
1238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM12RST       LL_APB1_GRP1_ForceReset\n
1239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM13RST       LL_APB1_GRP1_ForceReset\n
1240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM14RST       LL_APB1_GRP1_ForceReset\n
1241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset\n
1242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
1243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
1244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI3RST        LL_APB1_GRP1_ForceReset\n
1245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPDIFRXRST     LL_APB1_GRP1_ForceReset\n
1246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
1247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART3RST      LL_APB1_GRP1_ForceReset\n
1248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART4RST       LL_APB1_GRP1_ForceReset\n
1249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART5RST       LL_APB1_GRP1_ForceReset\n
1250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
1251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
1252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
1253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C4RST        LL_APB1_GRP1_ForceReset\n
1254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN1RST        LL_APB1_GRP1_ForceReset\n
1255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN2RST        LL_APB1_GRP1_ForceReset\n
1256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN3RST        LL_APB1_GRP1_ForceReset\n
1257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CECRST         LL_APB1_GRP1_ForceReset\n
1258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
1259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
1260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART7RST       LL_APB1_GRP1_ForceReset\n
1261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART8RST       LL_APB1_GRP1_ForceReset
1262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 43


1275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
1298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
1300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
1304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
1305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
1306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM4RST        LL_APB1_GRP1_ReleaseReset\n
1307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM5RST        LL_APB1_GRP1_ReleaseReset\n
1308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
1309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
1310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM12RST       LL_APB1_GRP1_ReleaseReset\n
1311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM13RST       LL_APB1_GRP1_ReleaseReset\n
1312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     TIM14RST       LL_APB1_GRP1_ReleaseReset\n
1313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset\n
1314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
1315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
1316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPI3RST        LL_APB1_GRP1_ReleaseReset\n
1317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     SPDIFRXRST     LL_APB1_GRP1_ReleaseReset\n
1318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
1319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     USART3RST      LL_APB1_GRP1_ReleaseReset\n
1320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART4RST       LL_APB1_GRP1_ReleaseReset\n
1321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART5RST       LL_APB1_GRP1_ReleaseReset\n
1322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
1323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
1324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
1325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     I2C4RST        LL_APB1_GRP1_ReleaseReset\n
1326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN1RST        LL_APB1_GRP1_ReleaseReset\n
1327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN2RST        LL_APB1_GRP1_ReleaseReset\n
1328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CAN3RST        LL_APB1_GRP1_ReleaseReset\n
1329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     CECRST         LL_APB1_GRP1_ReleaseReset\n
1330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
1331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 44


1332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART7RST       LL_APB1_GRP1_ReleaseReset\n
1333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1RSTR     UART8RST       LL_APB1_GRP1_ReleaseReset
1334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
1370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
1372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in low-power mode
1376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1LPENR     TIM2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM4LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM5LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM6LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM7LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM12LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM13LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM14LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     LPTIM1LPEN      LL_APB1_GRP1_EnableClockLowPower\n
1386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     WWDGLPEN        LL_APB1_GRP1_EnableClockLowPower\n
1387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 45


1389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPDIFRXLPEN     LL_APB1_GRP1_EnableClockLowPower\n
1390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART2LPEN      LL_APB1_GRP1_EnableClockLowPower\n
1391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART3LPEN      LL_APB1_GRP1_EnableClockLowPower\n
1392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART4LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART5LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C1LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C4LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN1LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN2LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN3LPEN        LL_APB1_GRP1_EnableClockLowPower\n
1401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CECLPEN         LL_APB1_GRP1_EnableClockLowPower\n
1402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     PWRLPEN         LL_APB1_GRP1_EnableClockLowPower\n
1403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     DACLPEN         LL_APB1_GRP1_EnableClockLowPower\n
1404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART7LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART8LPEN       LL_APB1_GRP1_EnableClockLowPower\n
1406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     RTCLPEN         LL_APB1_GRP1_EnableClockLowPower
1407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
1425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockLowPower(uint32_t Periphs)
1444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 46


1446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB1LPENR, Periphs);
1447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1LPENR, Periphs);
1449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
1450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in low-power mode
1454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB1LPENR     TIM2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM4LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM5LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM6LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM7LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM12LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM13LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     TIM14LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     LPTIM1LPEN      LL_APB1_GRP1_DisableClockLowPower\n
1464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     WWDGLPEN        LL_APB1_GRP1_DisableClockLowPower\n
1465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPI3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     SPDIFRXLPEN     LL_APB1_GRP1_DisableClockLowPower\n
1468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART2LPEN      LL_APB1_GRP1_DisableClockLowPower\n
1469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     USART3LPEN      LL_APB1_GRP1_DisableClockLowPower\n
1470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART4LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART5LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C1LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     I2C4LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN1LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN2LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CAN3LPEN        LL_APB1_GRP1_DisableClockLowPower\n
1479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     CECLPEN         LL_APB1_GRP1_DisableClockLowPower\n
1480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     PWRLPEN         LL_APB1_GRP1_DisableClockLowPower\n
1481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     DACLPEN         LL_APB1_GRP1_DisableClockLowPower\n
1482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART7LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     UART8LPEN       LL_APB1_GRP1_DisableClockLowPower\n
1484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB1LPENR     RTCLPEN         LL_APB1_GRP1_DisableClockLowPower
1485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
1487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 
1488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4
1489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 
1490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6
1491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7
1492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12
1493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13
1494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14
1495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
1496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
1497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 
1498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3
1499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPDIFRX (*)
1500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
1501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3
1502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 47


1503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5
1504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
1506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C4 (*)
1508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1
1509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
1510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN3 (*)
1511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC  (*)
1512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
1513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1
1514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART7
1515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART8
1516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTCAPB (*)
1517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockLowPower(uint32_t Periphs)
1522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1LPENR, Periphs);
1524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** }
1525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @}
1528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
1529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
1531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @{
1532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   */
1533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** 
1534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** /**
1535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
1536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @rmtoll APB2ENR     TIM1EN        LL_APB2_GRP1_EnableClock\n
1537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM8EN        LL_APB2_GRP1_EnableClock\n
1538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     USART1EN      LL_APB2_GRP1_EnableClock\n
1539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     USART6EN      LL_APB2_GRP1_EnableClock\n
1540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     ADC1EN        LL_APB2_GRP1_EnableClock\n
1541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     ADC2EN        LL_APB2_GRP1_EnableClock\n
1542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     ADC3EN        LL_APB2_GRP1_EnableClock\n
1543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SDMMC1EN      LL_APB2_GRP1_EnableClock\n
1544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SDMMC2EN      LL_APB2_GRP1_EnableClock\n
1545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI1EN        LL_APB2_GRP1_EnableClock\n
1546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI4EN        LL_APB2_GRP1_EnableClock\n
1547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SYSCFGEN      LL_APB2_GRP1_EnableClock\n
1548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM9EN        LL_APB2_GRP1_EnableClock\n
1549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM10EN       LL_APB2_GRP1_EnableClock\n
1550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     TIM11EN       LL_APB2_GRP1_EnableClock\n
1551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI5EN        LL_APB2_GRP1_EnableClock\n
1552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SPI6EN        LL_APB2_GRP1_EnableClock\n
1553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SAI1EN        LL_APB2_GRP1_EnableClock\n
1554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     SAI2EN        LL_APB2_GRP1_EnableClock\n
1555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     LTDCEN        LL_APB2_GRP1_EnableClock\n
1556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     DSIEN         LL_APB2_GRP1_EnableClock\n
1557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     DFSDM1EN      LL_APB2_GRP1_EnableClock\n
1558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     MDIOEN        LL_APB2_GRP1_EnableClock\n
1559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         APB2ENR     OTGPHYCEN     LL_APB2_GRP1_EnableClock
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 48


1560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
1561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
1562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8
1563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
1564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART6
1565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
1566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC2
1567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC3
1568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SDMMC1
1569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SDMMC2 (*)
1570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
1571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI4
1572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
1573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM9
1574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM10
1575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM11
1576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI5
1577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI6 (*)
1578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI1
1579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SAI2
1580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_LTDC (*)
1581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DSI  (*)
1582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DFSDM1 (*)
1583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_MDIO (*)
1584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_OTGPHYC (*)
1585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *
1586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   *         (*) value not defined in all devices.
1587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   * @retval None
1588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** */
1589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 554              		.loc 2 1589 22 view .LVU156
 555              	.LBB43:
1590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h **** {
1591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   __IO uint32_t tmpreg;
 556              		.loc 2 1591 3 view .LVU157
1592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 557              		.loc 2 1592 3 view .LVU158
 558 0010 154B     		ldr	r3, .L27
 559 0012 5A6C     		ldr	r2, [r3, #68]
 560 0014 42F00102 		orr	r2, r2, #1
 561 0018 5A64     		str	r2, [r3, #68]
1593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 562              		.loc 2 1594 3 view .LVU159
 563              		.loc 2 1594 12 is_stmt 0 view .LVU160
 564 001a 5B6C     		ldr	r3, [r3, #68]
 565 001c 03F00103 		and	r3, r3, #1
 566              		.loc 2 1594 10 view .LVU161
 567 0020 0093     		str	r3, [sp]
1595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_bus.h ****   (void)tmpreg;
 568              		.loc 2 1595 3 is_stmt 1 view .LVU162
 569 0022 009B     		ldr	r3, [sp]
 570              	.LVL13:
 571              		.loc 2 1595 3 is_stmt 0 view .LVU163
 572              	.LBE43:
 573              	.LBE42:
 289:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 49


 574              		.loc 1 289 3 is_stmt 1 view .LVU164
 289:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 575              		.loc 1 289 28 is_stmt 0 view .LVU165
 576 0024 BF23     		movs	r3, #191
 577 0026 ADF80430 		strh	r3, [sp, #4]	@ movhi
 290:Src/main.c    ****   TIM_InitStruct.Autoreload = 65000;
 578              		.loc 1 290 3 is_stmt 1 view .LVU166
 291:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 579              		.loc 1 291 3 view .LVU167
 291:Src/main.c    ****   TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
 580              		.loc 1 291 29 is_stmt 0 view .LVU168
 581 002a 4FF6E853 		movw	r3, #65000
 582 002e 0393     		str	r3, [sp, #12]
 292:Src/main.c    ****   TIM_InitStruct.RepetitionCounter = 0;
 583              		.loc 1 292 3 is_stmt 1 view .LVU169
 293:Src/main.c    ****   LL_TIM_Init(TIM1, &TIM_InitStruct);
 584              		.loc 1 293 3 view .LVU170
 294:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM1);
 585              		.loc 1 294 3 view .LVU171
 586 0030 0E4C     		ldr	r4, .L27+4
 587 0032 01A9     		add	r1, sp, #4
 588 0034 2046     		mov	r0, r4
 589 0036 FFF7FEFF 		bl	LL_TIM_Init
 590              	.LVL14:
 295:Src/main.c    ****   LL_TIM_SetClockSource(TIM1, LL_TIM_CLOCKSOURCE_INTERNAL);
 591              		.loc 1 295 3 view .LVU172
 592              	.LBB44:
 593              	.LBI44:
 594              		.file 3 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h"
   1:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @file    stm32f7xx_ll_tim.h
   4:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @attention
   8:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *
   9:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *
  12:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *
  17:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  19:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  20:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #ifndef __STM32F7xx_LL_TIM_H
  22:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __STM32F7xx_LL_TIM_H
  23:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  24:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif
  27:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  28:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 50


  29:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #include "stm32f7xx.h"
  30:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  31:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @addtogroup STM32F7xx_LL_Driver
  32:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
  33:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  34:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  35:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined (TIM1) || defined (TIM8) || defined (TIM2) || defined (TIM3) ||  defined (TIM4) || defi
  36:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  37:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
  39:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  40:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  41:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
  45:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
  46:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  48:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  50:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  52:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  54:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x04U,   /* 6: TIMx_CH4  */
  55:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x3CU,   /* 7: TIMx_CH5  */
  56:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0x3CU    /* 8: TIMx_CH6  */
  57:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  58:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  59:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  60:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  61:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  62:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 1: - NA */
  63:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  64:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 3: - NA */
  65:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  66:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 5: - NA */
  67:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 6: OC4M, OC4FE, OC4PE */
  68:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 7: OC5M, OC5FE, OC5PE */
  69:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U             /* 8: OC6M, OC6FE, OC6PE */
  70:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  71:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  72:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  73:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  74:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  75:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 1: - NA */
  76:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  77:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 3: - NA */
  78:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  79:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 5: - NA */
  80:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 6: CC4S, IC4PSC, IC4F */
  81:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 7: - NA */
  82:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U             /* 8: - NA */
  83:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  84:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  85:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 51


  86:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
  87:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: CC1P */
  88:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  89:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   4U,            /* 2: CC2P */
  90:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  91:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 4: CC3P */
  92:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  93:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   12U,           /* 6: CC4P */
  94:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   16U,           /* 7: CC5P */
  95:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   20U            /* 8: CC6P */
  96:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
  97:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
  98:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  99:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   3U,            /* 3: OIS2N */
 104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   6U,            /* 6: OIS4 */
 107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   8U,            /* 7: OIS5 */
 108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   10U            /* 8: OIS6 */
 109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** };
 110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if   defined(TIM_BREAK_INPUT_SUPPORT)
 120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Defines used for the bit position in the register and perform offsets */
 121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM_POSITION_BRK_SOURCE           (POSITION_VAL(Source) & 0x1FUL)
 122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF1 register */
 124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF1_BKINE          TIM1_AF1_BKINE       /*!< BRK BKINE input enable */
 125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(DFSDM1_Channel0)
 126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF1_BKDFBKE        TIM1_AF1_BKDFBKE     /*!< BRK DFSDM1_BREAK[0] enable */
 127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* DFSDM1_Channel0 */
 128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF1_BKINP        TIM1_AF1_BKINP       /*!< BRK BKIN input polarity */
 129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF2 register */
 130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF2_BK2INE         TIM1_AF2_BK2INE      /*!< BRK B2KINE input enable */
 131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(DFSDM1_Channel0)
 132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF2_BK2DFBKE       TIM1_AF2_BK2DFBKE    /*!< BRK DFSDM_BREAK[0] enable */
 133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* DFSDM1_Channel0 */
 134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_AF2_BK2INP       TIM1_AF2_BK2INP      /*!< BRK BK2IN input polarity */
 135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* TIM_BREAK_INPUT_SUPPORT */
 136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Remap mask definitions */
 138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_OR_RMP_SHIFT  16U
 139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIMx_OR_RMP_MASK   0x0000FFFFU
 140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM2_OR_RMP_MASK   (TIM2_OR_ITR1_RMP << TIMx_OR_RMP_SHIFT)
 141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM5_OR_RMP_MASK   (TIM5_OR_TI4_RMP << TIMx_OR_RMP_SHIFT)
 142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM11_OR_RMP_MASK  (TIM11_OR_TI1_RMP << TIMx_OR_RMP_SHIFT)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 52


 143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
 175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
 176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval none
 177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U :\
 185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH4) ? 6U :\
 186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH5) ? 7U : 8U)
 187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval none
 195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****     (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****      ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****      ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 53


 200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint8_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downco
 239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    from the RCR value (N).
 241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This parameter must be a number between 0x00 and 0xFF.
 245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 54


 257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 55


 314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 56


 371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** typedef struct
 412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 57


 428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                             has been written, their content is frozen until the nex
 432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       switching-on of the outputs.
 435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t BreakFilter;          /*!< Specifies the TIM Break Filter.
 456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_FILTER
 457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Break2State;          /*!< Specifies whether the TIM Break2 input is enabled or not.
 463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_ENABLE
 464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Break2Polarity;        /*!< Specifies the TIM Break2 Input pin polarity.
 470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_POLARI
 471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t Break2Filter;          /*!< Specifies the TIM Break2 Filter.
 477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_FILTER
 478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 58


 485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC5IF                        TIM_SR_CC5IF         /*!< Capture/compare 5 interrup
 511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC6IF                        TIM_SR_CC6IF         /*!< Capture/compare 6 interrup
 512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_B2IF                         TIM_SR_B2IF          /*!< Second break interrupt fla
 516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SR_SBIF                         TIM_SR_SBIF          /*!< System Break interrupt fla
 521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_ENABLE Break2 Enable
 536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_DISABLE            0x00000000U              /*!< Break2 function disabled */
 539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_ENABLE             TIM_BDTR_BK2E            /*!< Break2 function enabled */
 540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 59


 542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 60


 599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 61


 656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH5                     TIM_CCER_CC5E     /*!< Timer output channel 5 */
 659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH6                     TIM_CCER_CC6E     /*!< Timer output channel 6 */
 660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM1              TIM_CCMR1_OC1M_3                                    
 687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM2              (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0)               
 688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM1            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_2)               
 689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM2            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1
 690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM1          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM2          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M)                 
 692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 62


 713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GROUPCH5 GROUPCH5
 715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_NONE                   0x00000000U           /*!< No effect of OC5REF on OC
 718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC1REFC                TIM_CCR5_GC5C1        /*!< OC1REFC is the logical AN
 719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC2REFC                TIM_CCR5_GC5C2        /*!< OC2REFC is the logical AN
 720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC3REFC                TIM_CCR5_GC5C3        /*!< OC3REFC is the logical AN
 721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 63


 770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO2 Trigger Output 2
 815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_RESET                     0x00000000U                                         
 818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_ENABLE                    TIM_CR2_MMS2_0                                      
 819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_UPDATE                    TIM_CR2_MMS2_1                                      
 820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_CC1F                      (TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)                   
 821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC1                       TIM_CR2_MMS2_2                                      
 822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC2                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)                   
 823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC3                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1)                   
 824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5                       TIM_CR2_MMS2_3                                      
 826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6                       (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_0)                   
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 64


 827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1)                   
 828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2)                   
 830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)  
 831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 |TIM_CR2_MMS2_1)   
 832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | 
 833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER TIM_SMCR_SMS_3                      /*!< Combined re
 845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 65


 884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_FILTER break filter
 918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1              0x00000000U   /*!< No filter, BRK acts asynchronousl
 921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N2           0x00010000U   /*!< fSAMPLING=fCK_INT, N=2 */
 922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N4           0x00020000U   /*!< fSAMPLING=fCK_INT, N=4 */
 923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N8           0x00030000U   /*!< fSAMPLING=fCK_INT, N=8 */
 924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N6           0x00040000U   /*!< fSAMPLING=fDTS/2, N=6 */
 925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N8           0x00050000U   /*!< fSAMPLING=fDTS/2, N=8 */
 926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N6           0x00060000U   /*!< fSAMPLING=fDTS/4, N=6 */
 927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N8           0x00070000U   /*!< fSAMPLING=fDTS/4, N=8 */
 928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N6           0x00080000U   /*!< fSAMPLING=fDTS/8, N=6 */
 929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N8           0x00090000U   /*!< fSAMPLING=fDTS/8, N=8 */
 930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N5          0x000A0000U   /*!< fSAMPLING=fDTS/16, N=5 */
 931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N6          0x000B0000U   /*!< fSAMPLING=fDTS/16, N=6 */
 932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N8          0x000C0000U   /*!< fSAMPLING=fDTS/16, N=8 */
 933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N5          0x000D0000U   /*!< fSAMPLING=fDTS/32, N=5 */
 934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N6          0x000E0000U   /*!< fSAMPLING=fDTS/32, N=6 */
 935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N8          0x000F0000U   /*!< fSAMPLING=fDTS/32, N=8 */
 936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_POLARITY BREAK2 POLARITY
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 66


 941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_LOW             0x00000000U             /*!< Break input BRK2 is act
 944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_HIGH            TIM_BDTR_BK2P           /*!< Break input BRK2 is act
 945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_FILTER BREAK2 FILTER
 950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1             0x00000000U   /*!< No filter, BRK acts asynchronousl
 953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N2          0x00100000U   /*!< fSAMPLING=fCK_INT, N=2 */
 954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N4          0x00200000U   /*!< fSAMPLING=fCK_INT, N=4 */
 955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N8          0x00300000U   /*!< fSAMPLING=fCK_INT, N=8 */
 956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N6          0x00400000U   /*!< fSAMPLING=fDTS/2, N=6 */
 957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N8          0x00500000U   /*!< fSAMPLING=fDTS/2, N=8 */
 958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N6          0x00600000U   /*!< fSAMPLING=fDTS/4, N=6 */
 959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N8          0x00700000U   /*!< fSAMPLING=fDTS/4, N=8 */
 960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N6          0x00800000U   /*!< fSAMPLING=fDTS/8, N=6 */
 961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N8          0x00900000U   /*!< fSAMPLING=fDTS/8, N=8 */
 962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N5         0x00A00000U   /*!< fSAMPLING=fDTS/16, N=5 */
 963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N6         0x00B00000U   /*!< fSAMPLING=fDTS/16, N=6 */
 964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N8         0x00C00000U   /*!< fSAMPLING=fDTS/16, N=8 */
 965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N5         0x00D00000U   /*!< fSAMPLING=fDTS/32, N=5 */
 966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N6         0x00E00000U   /*!< fSAMPLING=fDTS/32, N=6 */
 967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N8         0x00F00000U   /*!< fSAMPLING=fDTS/32, N=8 */
 968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
 982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
 986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
 988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
 990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if   defined(TIM_BREAK_INPUT_SUPPORT)
 991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_INPUT BREAK INPUT
 992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
 993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN                0x00000000U  /*!< TIMx_BKIN input */
 995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN2               0x00000004U  /*!< TIMx_BKIN2 input */
 996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
 997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 67


 998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
 999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_SOURCE BKIN SOURCE
1001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKIN                TIM1_AF1_BKINE      /*!< BKIN input from AF controll
1004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DF1BK               TIM1_AF1_BKDF1BKE   /*!< internal signal: DFSDM1 bre
1005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_POLARITY BKIN POLARITY
1010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_LOW               TIM1_AF1_BKINP           /*!< BRK BKIN input is acti
1013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_HIGH              0x00000000U              /*!< BRK BKIN input is acti
1014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* TIM_BREAK_INPUT_SUPPORT */
1018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
1020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
1023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
1024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
1025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
1026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
1027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
1028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
1029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
1031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
1032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
1033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
1035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
1039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
1040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR            (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                     
1041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR3         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR5          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR6          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #if defined(TIM_AF1_BKINE)&&defined(TIM_AF2_BKINE)
1045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF1           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3)                     
1046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF2           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_0)     
1047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #endif /* TIM_AF1_BKINE && TIM_AF2_BKINE */
1048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
1053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 68


1055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
1056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
1057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
1058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
1059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
1060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
1061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
1062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
1064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
1065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
1066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
1068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
1072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
1073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP_TIM8  TIM2 Internal Trigger1 Remap TIM8
1079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO    TIM2_OR_RMP_MASK                           /*!< TIM2_ITR1
1082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_ETH_PTP      (TIM2_OR_ITR1_RMP_0 | TIM2_OR_RMP_MASK)    /*!< TIM2_ITR1
1083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF   (TIM2_OR_ITR1_RMP_1 | TIM2_OR_RMP_MASK)    /*!< TIM2_ITR1
1084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_HS_SOF   (TIM2_OR_ITR1_RMP | TIM2_OR_RMP_MASK)      /*!< TIM2_ITR1
1085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI4_RMP  TIM5 External Input Ch4 Remap
1090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_GPIO        TIM5_OR_RMP_MASK                             /*!< TIM5 chan
1093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_LSI         (TIM5_OR_TI4_RMP_0 | TIM5_OR_RMP_MASK)       /*!< TIM5 chan
1094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_LSE         (TIM5_OR_TI4_RMP_1 | TIM5_OR_RMP_MASK)       /*!< TIM5 chan
1095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_RTC         (TIM5_OR_TI4_RMP | TIM5_OR_RMP_MASK)         /*!< TIM5 chan
1096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP  TIM11 External Input Capture 1 Remap
1101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO        TIM11_OR_RMP_MASK                           /*!< TIM11 cha
1104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_SPDIFRX     (TIM11_OR_TI1_RMP_0 | TIM11_OR_RMP_MASK)    /*!< TIM11 cha
1105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_HSE         (TIM11_OR_TI1_RMP_1 | TIM11_OR_RMP_MASK)    /*!< TIM11 cha
1106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_MCO1        (TIM11_OR_TI1_RMP | TIM11_OR_RMP_MASK)      /*!< TIM11 cha
1107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 69


1112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
1120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
1121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
1125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Write a value in TIM register.
1129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __REG__ Register to be written
1131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
1132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
1135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Read a value in TIM register.
1138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __REG__ Register to be read
1140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Register value
1141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
1143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
1148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro retrieving the UIFCPY flag from the counter value.
1153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GETFLAG_UIFCPY (@ref LL_TIM_GetCounter ());
1154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note  Relevant only if UIF flag remapping has been enabled  (UIF status bit is copied
1155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        to TIMx_CNT register bit 31)
1156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CNT__ Counter value
1157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval UIF status bit
1158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_GETFLAG_UIFCPY(__CNT__)  \
1160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****    (READ_BIT((__CNT__), TIM_CNT_UIFCPY) >> TIM_CNT_UIFCPY_Pos)
1161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
1164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
1165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
1167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 70


1169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
1171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval DTG[0:7]
1172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
1174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****     ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))   
1175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (_
1176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (_
1177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (
1178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****        0U)
1179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
1182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
1183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
1185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
1186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
1188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****    (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
1189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
1192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PSC__ prescaler
1195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
1199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****      ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1
1200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
1204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PSC__ prescaler
1206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****           / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
1215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PSC__ prescaler
1218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****  ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****            + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 71


1226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****    ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable timer counter.
1259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable timer counter.
1270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 72


1283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable update event generation.
1292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable update event generation.
1303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
1321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set update event source
1325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        - Counter overflow/underflow
1328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        - Setting the UG bit
1329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 73


1340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual event update source
1346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       by a timer instance.
1389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 74


1397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual counter mode.
1410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       by a timer instance.
1413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
 595              		.loc 3 1445 22 view .LVU173
 596              	.LBB45:
1446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1,TIM_CR1_ARPE);
 597              		.loc 3 1447 3 view .LVU174
 598 003a 2368     		ldr	r3, [r4]
 599 003c 23F08003 		bic	r3, r3, #128
 600 0040 2360     		str	r3, [r4]
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 75


 601              	.LVL15:
 602              		.loc 3 1447 3 is_stmt 0 view .LVU175
 603              	.LBE45:
 604              	.LBE44:
 296:Src/main.c    ****   LL_TIM_SetTriggerOutput(TIM1, LL_TIM_TRGO_RESET);
 605              		.loc 1 296 3 is_stmt 1 view .LVU176
 606              	.LBB46:
 607              	.LBI46:
1448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       instance.
1466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       instance.
1484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 76


1497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the counter value.
1498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the counter value.
1512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the prescaler value.
1538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the prescaler value.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 77


1554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Auto-reload value
1586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note For advanced timer instances RepetitionCounter can be up to 65535.
1595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255
1600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 78


1611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Repetition counter value
1614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Force a continuous copy of the update interrupt flag (UIF) into the timer counter regis
1622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This allows both the counter value and a potential roll-over condition signalled by the U
1623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_EnableUIFRemap
1624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUIFRemap(TIM_TypeDef *TIMx)
1628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable update interrupt flag (UIF) remapping.
1634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_DisableUIFRemap
1635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUIFRemap(TIM_TypeDef *TIMx)
1639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 79


1668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 80


1725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel\n
1750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_EnableChannel\n
1751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_EnableChannel
1752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel\n
1779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_DisableChannel\n
1780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_DisableChannel
1781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 81


1782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel\n
1808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_IsEnabledChannel\n
1809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_IsEnabledChannel
1810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
1830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
1834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Configure an output channel.
1837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 82


1839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        CC5S          LL_TIM_OC_ConfigOutput\n
1842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        CC6S          LL_TIM_OC_ConfigOutput\n
1843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_ConfigOutput\n
1848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_ConfigOutput\n
1849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
1850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
1851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
1852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput\n
1853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS5          LL_TIM_OC_ConfigOutput\n
1854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2          OIS6          LL_TIM_OC_ConfigOutput
1855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
1866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
1876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
1877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode\n
1886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_SetMode\n
1887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_SetMode
1888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 83


1896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
1906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
1907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
1908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
1909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
1910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
1911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
1918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode\n
1926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_GetMode\n
1927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_GetMode
1928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
1946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
1947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
1948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
1949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
1950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
1951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 84


1953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
1957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
1963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
1965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
1967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity\n
1968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_SetPolarity\n
1969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_SetPolarity
1970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
1971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
1985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
1986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
1988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
1991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
1992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
1993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
1996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
1998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
2000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity\n
2001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_GetPolarity\n
2002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_GetPolarity
2003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 85


2010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
2022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
2026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function is significant only for the timer instances
2027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       supporting the break feature. Macro @ref IS_TIM_BREAK_INSTANCE(TIMx)
2028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
2029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a break input.
2030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
2031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
2033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
2035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
2036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState\n
2037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_SetIdleState\n
2038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_SetIdleState
2039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
2051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
2056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
2059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
2063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
2064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
2066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 86


2067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
2068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
2069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState\n
2070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_GetIdleState\n
2071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_GetIdleState
2072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
2088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
2091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
2095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
2096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
2097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
2098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
2099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast\n
2100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_EnableFast\n
2101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_EnableFast
2102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
2122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
2123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 87


2124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
2125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast\n
2126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_DisableFast\n
2127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_DisableFast
2128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
2148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
2149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
2150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
2151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
2152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_IsEnabledFast\n
2153:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_IsEnabledFast
2154:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2155:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2156:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2157:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2158:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2159:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2160:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2161:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2162:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2163:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2164:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
2165:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2166:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2167:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2168:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
2169:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2170:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2171:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2172:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2173:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
2174:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
2175:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
2176:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
2177:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload\n
2178:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_EnablePreload\n
2179:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_EnablePreload
2180:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 88


2181:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2182:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2183:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2184:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2185:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2186:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2187:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2188:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2189:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2190:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2191:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2192:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2193:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2194:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2195:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2196:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2197:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2198:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
2199:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
2200:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
2201:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
2202:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload\n
2203:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_DisablePreload\n
2204:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_DisablePreload
2205:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2206:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2207:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2208:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2209:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2210:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2211:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2212:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2213:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2214:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2215:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2216:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2217:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2218:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2219:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2220:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2221:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2222:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2223:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
2224:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
2225:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
2226:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
2227:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
2228:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_IsEnabledPreload\n
2229:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_IsEnabledPreload
2230:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2231:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2232:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2233:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2234:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2235:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2236:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2237:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 89


2238:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2239:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2240:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
2241:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2242:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2243:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2244:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
2245:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2246:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2247:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2248:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2249:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
2250:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2251:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2252:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2253:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
2254:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
2255:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
2256:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear\n
2257:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_EnableClear\n
2258:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_EnableClear
2259:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2260:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2261:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2262:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2264:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2266:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2267:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2268:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2269:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2270:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2271:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2272:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2273:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2274:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2275:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2276:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2277:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
2278:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2279:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2280:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
2281:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
2282:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
2283:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear\n
2284:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_DisableClear\n
2285:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_DisableClear
2286:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2287:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2288:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2289:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2290:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2291:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2292:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2293:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2294:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 90


2295:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2296:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2297:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2298:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2299:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2300:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2301:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2302:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2303:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2304:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
2305:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
2306:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2307:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2308:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2309:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
2310:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
2311:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
2312:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
2313:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_IsEnabledClear\n
2314:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_IsEnabledClear
2315:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2316:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2317:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2318:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2319:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2320:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2321:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2322:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2323:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2324:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2325:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
2326:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2327:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2328:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2329:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2330:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2331:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2332:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2333:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2334:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2335:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2336:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2337:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2338:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2339:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2340:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2341:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2342:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2343:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2344:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2345:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2346:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2347:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2348:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2349:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2350:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2351:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 91


2352:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2353:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2354:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2355:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2356:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2357:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2358:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2359:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2360:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
2361:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2362:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
2363:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2364:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2365:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2366:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
2367:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2368:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2369:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2370:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2371:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2372:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2373:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2374:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2375:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2376:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2377:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2378:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2379:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2380:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2381:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2382:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2383:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2384:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2385:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2386:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2387:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2388:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2389:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2390:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2391:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2392:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2393:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2394:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2395:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2396:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2397:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2398:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2399:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2400:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2401:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2402:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2403:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2404:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2405:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2406:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2407:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2408:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 92


2409:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2410:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2411:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2412:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2413:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2414:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2415:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2416:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2417:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 5 (TIMx_CCR5).
2418:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2419:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2420:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_SetCompareCH5
2421:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2422:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2423:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2424:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2425:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
2426:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2427:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
2428:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2429:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2430:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2431:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set compare value for output channel 6 (TIMx_CCR6).
2432:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2433:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2434:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_SetCompareCH6
2435:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2436:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2437:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2438:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2439:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
2440:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2441:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   WRITE_REG(TIMx->CCR6, CompareValue);
2442:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2443:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2444:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2445:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2446:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2447:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2448:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2449:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2450:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2451:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2452:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2453:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2454:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2455:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2456:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2457:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2458:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2459:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2460:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2461:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2462:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2463:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2464:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2465:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 93


2466:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2467:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2468:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2469:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2470:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2471:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2472:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2473:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2474:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2475:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2476:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2477:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2478:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2479:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2480:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2481:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2482:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2483:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
2484:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2485:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2486:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2487:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2488:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2489:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2490:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2491:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2492:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2493:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2494:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2495:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2496:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2497:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2498:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2499:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
2500:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2501:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2502:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2503:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2504:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2506:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2508:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2509:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR5) set for  output channel 5.
2510:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2511:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2512:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_GetCompareCH5
2513:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2514:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2515:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2516:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH5(TIM_TypeDef *TIMx)
2517:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CCR5, TIM_CCR5_CCR5));
2519:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2521:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2522:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR6) set for  output channel 6.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 94


2523:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2524:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2525:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_GetCompareCH6
2526:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2527:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2528:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2529:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH6(TIM_TypeDef *TIMx)
2530:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2531:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR6));
2532:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2533:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2534:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2535:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Select on which reference signal the OC5REF is combined to.
2536:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMBINED3PHASEPWM_INSTANCE(TIMx) can be used to check
2537:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports the combined 3-phase PWM mode.
2538:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR5         GC5C3          LL_TIM_SetCH5CombinedChannels\n
2539:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCR5         GC5C2          LL_TIM_SetCH5CombinedChannels\n
2540:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCR5         GC5C1          LL_TIM_SetCH5CombinedChannels
2541:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2542:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  GroupCH5 This parameter can be a combination of the following values:
2543:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_NONE
2544:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC1REFC
2545:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC2REFC
2546:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC3REFC
2547:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2548:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2549:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCH5CombinedChannels(TIM_TypeDef *TIMx, uint32_t GroupCH5)
2550:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2551:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, (TIM_CCR5_GC5C3 | TIM_CCR5_GC5C2 | TIM_CCR5_GC5C1), GroupCH5);
2552:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2553:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2554:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2555:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
2556:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2557:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2558:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2559:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
2560:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2561:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2562:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Configure input channel.
2563:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2564:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2565:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2566:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2567:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2568:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2569:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2570:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2571:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2572:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2573:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2574:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2575:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
2576:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2577:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2578:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2579:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 95


2580:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2581:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2582:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
2583:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2584:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2585:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2586:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2587:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2588:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2589:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2590:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2591:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2592:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2593:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
2594:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2595:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2596:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2597:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2598:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2599:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2600:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2601:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
2602:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2603:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2604:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2605:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2606:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2607:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the active input.
2608:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2609:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2610:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2611:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2612:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2613:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2614:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2615:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2616:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2617:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2618:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2619:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2620:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2621:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2622:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2623:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2624:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2625:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2626:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2627:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2628:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2629:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2630:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2631:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2632:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current active input.
2633:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
2634:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2635:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2636:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 96


2637:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2638:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2639:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2640:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2641:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2642:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2643:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2644:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2645:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2646:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2647:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2648:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2649:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2650:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2651:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2652:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2653:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2654:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2655:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2656:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2657:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2658:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2659:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2660:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2661:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2662:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2663:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2664:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2665:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2666:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2667:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2668:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2669:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2670:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2671:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2672:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2673:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2674:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2675:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2676:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2677:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2678:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2679:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2680:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2681:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2682:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2683:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2684:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2685:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2686:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2687:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2688:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2689:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2690:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2691:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2692:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2693:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 97


2694:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2695:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2696:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2697:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2698:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2699:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2700:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2701:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2702:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2703:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2704:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2705:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2706:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2707:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the input filter duration.
2708:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2709:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2710:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2711:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
2712:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2713:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2714:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2715:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2716:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2717:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2718:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2719:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2720:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2721:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2722:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2723:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2724:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2725:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2726:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2727:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2728:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2729:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2730:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2731:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2732:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2733:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2734:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2735:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2736:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2737:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2738:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2739:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2740:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2741:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2742:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2743:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2744:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2745:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the input filter duration.
2746:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2747:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
2748:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2749:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2750:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 98


2751:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2752:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2753:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2754:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2755:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2756:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2757:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2758:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2759:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2760:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2761:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2762:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2763:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2764:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2765:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2766:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2767:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2768:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2769:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2770:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2771:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2772:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2773:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2774:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2775:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2776:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2777:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2778:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2779:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2780:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2781:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2782:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2783:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2784:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2785:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2786:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2787:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2788:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2789:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2790:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2791:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2792:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2793:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2794:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2795:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2796:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2797:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2798:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2799:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2800:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2801:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2802:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2803:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2804:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2805:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2806:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2807:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 99


2808:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2809:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2810:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2811:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2812:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2813:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2814:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2815:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2816:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2817:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2818:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2819:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2820:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2821:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2822:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2823:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2824:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2825:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2826:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2827:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2828:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2829:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2830:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2831:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2832:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2833:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2834:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2835:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2836:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2837:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2838:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2839:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2840:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2841:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2842:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2843:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2844:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2845:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2846:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2847:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2848:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2849:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2850:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2851:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2852:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2853:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2854:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2855:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2856:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2857:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2858:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2859:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2860:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2861:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2862:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2863:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2864:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 100


2865:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2866:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2867:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * a timer instance provides an XOR input.
2868:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2869:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2870:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2871:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2872:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2873:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2874:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2875:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2876:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2877:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2878:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2879:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2880:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2881:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2882:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2883:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2884:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2885:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2886:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2887:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2888:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2889:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2890:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2891:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2892:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2893:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2894:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2895:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2896:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2897:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2898:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2899:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2900:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2901:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2902:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2903:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2904:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2905:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2906:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2907:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2908:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2909:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2910:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2911:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2912:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2913:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2914:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2915:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2916:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2917:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2918:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2919:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2920:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2921:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 101


2922:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2923:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2924:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2925:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2926:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2927:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2928:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2929:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2930:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2931:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2932:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2933:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2934:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2935:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2936:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2937:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2938:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2939:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2940:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2941:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2942:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
2943:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2944:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2945:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2946:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
2947:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2948:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2949:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2950:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2951:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2952:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2953:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2954:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2955:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2956:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2957:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2958:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2959:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2960:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2961:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2962:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2963:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2964:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2965:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2966:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2967:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2968:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
2969:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2970:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2971:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2972:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2973:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2974:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2975:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2976:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2977:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2978:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 102


2979:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2980:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
2981:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2982:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
2983:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2984:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
2985:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2986:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
2987:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
2988:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
2989:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2990:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2991:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2992:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2993:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2994:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2995:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2996:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2997:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2998:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2999:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
3000:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3001:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
3002:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
3003:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
3004:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
3005:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3006:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3007:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
 608              		.loc 3 3007 22 view .LVU177
 609              	.LBB47:
3008:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3009:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
 610              		.loc 3 3009 3 view .LVU178
 611 0042 A268     		ldr	r2, [r4, #8]
 612 0044 0A4B     		ldr	r3, .L27+8
 613 0046 1340     		ands	r3, r3, r2
 614 0048 A360     		str	r3, [r4, #8]
 615              	.LVL16:
 616              		.loc 3 3009 3 is_stmt 0 view .LVU179
 617              	.LBE47:
 618              	.LBE46:
 297:Src/main.c    ****   LL_TIM_SetTriggerOutput2(TIM1, LL_TIM_TRGO2_RESET);
 619              		.loc 1 297 3 is_stmt 1 view .LVU180
 620              	.LBB48:
 621              	.LBI48:
3010:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3011:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3012:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3013:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
3014:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
3015:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
3016:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
3017:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3018:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
3019:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
3020:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 103


3021:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
3022:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3023:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3024:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
3025:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3026:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
3027:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3028:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3029:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3030:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @}
3031:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3032:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3033:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
3034:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @{
3035:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3036:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3037:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
3038:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
3039:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
3040:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
3041:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3042:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
3043:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
3044:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
3045:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
3046:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
3047:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
3048:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
3049:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
3050:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
3051:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3052:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3053:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
 622              		.loc 3 3053 22 view .LVU181
 623              	.LBB49:
3054:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3055:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
 624              		.loc 3 3055 3 view .LVU182
 625 004a 6368     		ldr	r3, [r4, #4]
 626 004c 23F07003 		bic	r3, r3, #112
 627 0050 6360     		str	r3, [r4, #4]
 628              	.LVL17:
 629              		.loc 3 3055 3 is_stmt 0 view .LVU183
 630              	.LBE49:
 631              	.LBE48:
 298:Src/main.c    ****   LL_TIM_DisableMasterSlaveMode(TIM1);
 632              		.loc 1 298 3 is_stmt 1 view .LVU184
 633              	.LBB50:
 634              	.LBI50:
3056:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3057:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3058:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3059:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the trigger output 2 (TRGO2) used for ADC synchronization .
3060:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_TRGO2_INSTANCE(TIMx) can be used to check
3061:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       whether or not a timer instance can be used for ADC synchronization.
3062:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll CR2          MMS2          LL_TIM_SetTriggerOutput2
3063:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer Instance
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 104


3064:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  ADCSynchronization This parameter can be one of the following values:
3065:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_RESET
3066:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_ENABLE
3067:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_UPDATE
3068:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_CC1F
3069:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC1
3070:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC2
3071:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC3
3072:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4
3073:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5
3074:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6
3075:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISINGFALLING
3076:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6_RISINGFALLING
3077:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_RISING
3078:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_FALLING
3079:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_RISING
3080:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_FALLING
3081:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3082:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3083:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput2(TIM_TypeDef *TIMx, uint32_t ADCSynchronization)
 635              		.loc 3 3083 22 view .LVU185
 636              	.LBB51:
3084:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3085:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS2, ADCSynchronization);
 637              		.loc 3 3085 3 view .LVU186
 638 0052 6368     		ldr	r3, [r4, #4]
 639 0054 23F47003 		bic	r3, r3, #15728640
 640 0058 6360     		str	r3, [r4, #4]
 641              	.LVL18:
 642              		.loc 3 3085 3 is_stmt 0 view .LVU187
 643              	.LBE51:
 644              	.LBE50:
 299:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 645              		.loc 1 299 3 is_stmt 1 view .LVU188
 646              	.LBB52:
 647              	.LBI52:
3086:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3087:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3088:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3089:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
3090:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3091:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3092:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
3093:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3094:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
3095:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
3096:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
3097:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
3098:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
3099:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER
3100:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3101:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3102:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
3103:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3104:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
3105:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3106:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 105


3107:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3108:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
3109:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3110:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3111:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
3112:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3113:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
3114:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
3115:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
3116:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
3117:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
3118:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
3119:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
3120:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
3121:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
3122:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3123:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3124:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
3125:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3126:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
3127:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3128:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3129:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3130:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
3131:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3132:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3133:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
3134:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3135:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3136:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3137:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
3138:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3139:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
3140:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
3141:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** 
3142:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** /**
3143:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
3144:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3145:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3146:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
3147:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @param  TIMx Timer instance
3148:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   * @retval None
3149:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   */
3150:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
 648              		.loc 3 3150 22 view .LVU189
 649              	.LBB53:
3151:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
3152:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
 650              		.loc 3 3152 3 view .LVU190
 651 005a A368     		ldr	r3, [r4, #8]
 652 005c 23F08003 		bic	r3, r3, #128
 653 0060 A360     		str	r3, [r4, #8]
 654              	.LVL19:
 655              		.loc 3 3152 3 is_stmt 0 view .LVU191
 656              	.LBE53:
 657              	.LBE52:
 304:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 106


 658              		.loc 1 304 1 view .LVU192
 659 0062 06B0     		add	sp, sp, #24
 660              	.LCFI14:
 661              		.cfi_def_cfa_offset 8
 662              		@ sp needed
 663 0064 10BD     		pop	{r4, pc}
 664              	.L28:
 665 0066 00BF     		.align	2
 666              	.L27:
 667 0068 00380240 		.word	1073887232
 668 006c 00000140 		.word	1073807360
 669 0070 F8BFFEFF 		.word	-81928
 670              		.cfi_endproc
 671              	.LFE854:
 673              		.section	.text.SystemClock_Config,"ax",%progbits
 674              		.align	1
 675              		.global	SystemClock_Config
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu fpv5-d16
 681              	SystemClock_Config:
 682              	.LFB852:
 170:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 683              		.loc 1 170 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 224
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687 0000 30B5     		push	{r4, r5, lr}
 688              	.LCFI15:
 689              		.cfi_def_cfa_offset 12
 690              		.cfi_offset 4, -12
 691              		.cfi_offset 5, -8
 692              		.cfi_offset 14, -4
 693 0002 B9B0     		sub	sp, sp, #228
 694              	.LCFI16:
 695              		.cfi_def_cfa_offset 240
 171:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 696              		.loc 1 171 3 view .LVU194
 171:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 697              		.loc 1 171 22 is_stmt 0 view .LVU195
 698 0004 3422     		movs	r2, #52
 699 0006 0021     		movs	r1, #0
 700 0008 2BA8     		add	r0, sp, #172
 701 000a FFF7FEFF 		bl	memset
 702              	.LVL20:
 172:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 703              		.loc 1 172 3 is_stmt 1 view .LVU196
 172:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 704              		.loc 1 172 22 is_stmt 0 view .LVU197
 705 000e 0024     		movs	r4, #0
 706 0010 2694     		str	r4, [sp, #152]
 707 0012 2794     		str	r4, [sp, #156]
 708 0014 2894     		str	r4, [sp, #160]
 709 0016 2994     		str	r4, [sp, #164]
 710 0018 2A94     		str	r4, [sp, #168]
 173:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 107


 711              		.loc 1 173 3 is_stmt 1 view .LVU198
 173:Src/main.c    **** 
 712              		.loc 1 173 28 is_stmt 0 view .LVU199
 713 001a 9022     		movs	r2, #144
 714 001c 2146     		mov	r1, r4
 715 001e 02A8     		add	r0, sp, #8
 716 0020 FFF7FEFF 		bl	memset
 717              	.LVL21:
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 718              		.loc 1 177 3 is_stmt 1 view .LVU200
 719              	.LBB54:
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 720              		.loc 1 177 3 view .LVU201
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 721              		.loc 1 177 3 view .LVU202
 722 0024 204B     		ldr	r3, .L31
 723 0026 1A6C     		ldr	r2, [r3, #64]
 724 0028 42F08052 		orr	r2, r2, #268435456
 725 002c 1A64     		str	r2, [r3, #64]
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 726              		.loc 1 177 3 view .LVU203
 727 002e 1B6C     		ldr	r3, [r3, #64]
 728 0030 03F08053 		and	r3, r3, #268435456
 729 0034 0093     		str	r3, [sp]
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 730              		.loc 1 177 3 view .LVU204
 731 0036 009B     		ldr	r3, [sp]
 732              	.LBE54:
 177:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 733              		.loc 1 177 3 view .LVU205
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 734              		.loc 1 178 3 view .LVU206
 735              	.LBB55:
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 736              		.loc 1 178 3 view .LVU207
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 737              		.loc 1 178 3 view .LVU208
 738 0038 1C4B     		ldr	r3, .L31+4
 739 003a 1A68     		ldr	r2, [r3]
 740 003c 42F44042 		orr	r2, r2, #49152
 741 0040 1A60     		str	r2, [r3]
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 742              		.loc 1 178 3 view .LVU209
 743 0042 1B68     		ldr	r3, [r3]
 744 0044 03F44043 		and	r3, r3, #49152
 745 0048 0193     		str	r3, [sp, #4]
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 746              		.loc 1 178 3 view .LVU210
 747 004a 019B     		ldr	r3, [sp, #4]
 748              	.LBE55:
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 749              		.loc 1 178 3 view .LVU211
 181:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 750              		.loc 1 181 3 view .LVU212
 181:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 751              		.loc 1 181 36 is_stmt 0 view .LVU213
 752 004c 0123     		movs	r3, #1
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 108


 753 004e 2B93     		str	r3, [sp, #172]
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 754              		.loc 1 182 3 is_stmt 1 view .LVU214
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 755              		.loc 1 182 30 is_stmt 0 view .LVU215
 756 0050 4FF48033 		mov	r3, #65536
 757 0054 2C93     		str	r3, [sp, #176]
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 758              		.loc 1 183 3 is_stmt 1 view .LVU216
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 759              		.loc 1 183 34 is_stmt 0 view .LVU217
 760 0056 0225     		movs	r5, #2
 761 0058 3195     		str	r5, [sp, #196]
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 762              		.loc 1 184 3 is_stmt 1 view .LVU218
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
 763              		.loc 1 184 35 is_stmt 0 view .LVU219
 764 005a 4FF48003 		mov	r3, #4194304
 765 005e 3293     		str	r3, [sp, #200]
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 766              		.loc 1 185 3 is_stmt 1 view .LVU220
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 192;
 767              		.loc 1 185 30 is_stmt 0 view .LVU221
 768 0060 0823     		movs	r3, #8
 769 0062 3393     		str	r3, [sp, #204]
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 770              		.loc 1 186 3 is_stmt 1 view .LVU222
 186:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 771              		.loc 1 186 30 is_stmt 0 view .LVU223
 772 0064 C023     		movs	r3, #192
 773 0066 3493     		str	r3, [sp, #208]
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 774              		.loc 1 187 3 is_stmt 1 view .LVU224
 187:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 775              		.loc 1 187 30 is_stmt 0 view .LVU225
 776 0068 3595     		str	r5, [sp, #212]
 188:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 777              		.loc 1 188 3 is_stmt 1 view .LVU226
 188:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 778              		.loc 1 188 30 is_stmt 0 view .LVU227
 779 006a 3695     		str	r5, [sp, #216]
 189:Src/main.c    ****   {
 780              		.loc 1 189 3 is_stmt 1 view .LVU228
 189:Src/main.c    ****   {
 781              		.loc 1 189 7 is_stmt 0 view .LVU229
 782 006c 2BA8     		add	r0, sp, #172
 783 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 784              	.LVL22:
 195:Src/main.c    ****   {
 785              		.loc 1 195 3 is_stmt 1 view .LVU230
 195:Src/main.c    ****   {
 786              		.loc 1 195 7 is_stmt 0 view .LVU231
 787 0072 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 788              	.LVL23:
 201:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 789              		.loc 1 201 3 is_stmt 1 view .LVU232
 201:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 109


 790              		.loc 1 201 31 is_stmt 0 view .LVU233
 791 0076 0F23     		movs	r3, #15
 792 0078 2693     		str	r3, [sp, #152]
 203:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 793              		.loc 1 203 3 is_stmt 1 view .LVU234
 203:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 794              		.loc 1 203 34 is_stmt 0 view .LVU235
 795 007a 2795     		str	r5, [sp, #156]
 204:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 796              		.loc 1 204 3 is_stmt 1 view .LVU236
 204:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 797              		.loc 1 204 35 is_stmt 0 view .LVU237
 798 007c 2894     		str	r4, [sp, #160]
 205:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 799              		.loc 1 205 3 is_stmt 1 view .LVU238
 205:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800              		.loc 1 205 36 is_stmt 0 view .LVU239
 801 007e 4FF4A053 		mov	r3, #5120
 802 0082 2993     		str	r3, [sp, #164]
 206:Src/main.c    **** 
 803              		.loc 1 206 3 is_stmt 1 view .LVU240
 206:Src/main.c    **** 
 804              		.loc 1 206 36 is_stmt 0 view .LVU241
 805 0084 4FF48053 		mov	r3, #4096
 806 0088 2A93     		str	r3, [sp, #168]
 208:Src/main.c    ****   {
 807              		.loc 1 208 3 is_stmt 1 view .LVU242
 208:Src/main.c    ****   {
 808              		.loc 1 208 7 is_stmt 0 view .LVU243
 809 008a 0621     		movs	r1, #6
 810 008c 26A8     		add	r0, sp, #152
 811 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 812              	.LVL24:
 212:Src/main.c    ****                               |RCC_PERIPHCLK_I2C4;
 813              		.loc 1 212 3 is_stmt 1 view .LVU244
 212:Src/main.c    ****                               |RCC_PERIPHCLK_I2C4;
 814              		.loc 1 212 44 is_stmt 0 view .LVU245
 815 0092 074B     		ldr	r3, .L31+8
 816 0094 0293     		str	r3, [sp, #8]
 214:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 817              		.loc 1 214 3 is_stmt 1 view .LVU246
 214:Src/main.c    ****   PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 818              		.loc 1 214 43 is_stmt 0 view .LVU247
 819 0096 1694     		str	r4, [sp, #88]
 215:Src/main.c    ****   PeriphClkInitStruct.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 820              		.loc 1 215 3 is_stmt 1 view .LVU248
 215:Src/main.c    ****   PeriphClkInitStruct.I2c4ClockSelection = RCC_I2C4CLKSOURCE_PCLK1;
 821              		.loc 1 215 43 is_stmt 0 view .LVU249
 822 0098 1994     		str	r4, [sp, #100]
 216:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 823              		.loc 1 216 3 is_stmt 1 view .LVU250
 216:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 824              		.loc 1 216 42 is_stmt 0 view .LVU251
 825 009a 1E94     		str	r4, [sp, #120]
 217:Src/main.c    ****   {
 826              		.loc 1 217 3 is_stmt 1 view .LVU252
 217:Src/main.c    ****   {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 110


 827              		.loc 1 217 7 is_stmt 0 view .LVU253
 828 009c 02A8     		add	r0, sp, #8
 829 009e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 830              	.LVL25:
 221:Src/main.c    **** 
 831              		.loc 1 221 1 view .LVU254
 832 00a2 39B0     		add	sp, sp, #228
 833              	.LCFI17:
 834              		.cfi_def_cfa_offset 12
 835              		@ sp needed
 836 00a4 30BD     		pop	{r4, r5, pc}
 837              	.L32:
 838 00a6 00BF     		.align	2
 839              	.L31:
 840 00a8 00380240 		.word	1073887232
 841 00ac 00700040 		.word	1073770496
 842 00b0 00120200 		.word	135680
 843              		.cfi_endproc
 844              	.LFE852:
 846              		.section	.rodata.BMX_Init.str1.4,"aMS",%progbits,1
 847              		.align	2
 848              	.LC0:
 849 0000 4779726F 		.ascii	"Gyro conf OK!\012\015\000"
 849      20636F6E 
 849      66204F4B 
 849      210A0D00 
 850              		.align	2
 851              	.LC1:
 852 0010 4552524F 		.ascii	"ERROR BMX\012\015\000"
 852      5220424D 
 852      580A0D00 
 853              		.align	2
 854              	.LC2:
 855 001c 41636320 		.ascii	"Acc pow OK!\012\015\000"
 855      706F7720 
 855      4F4B210A 
 855      0D00
 856 002a 0000     		.align	2
 857              	.LC3:
 858 002c 4552524F 		.ascii	"ERROR ACP\012\015\000"
 858      52204143 
 858      500A0D00 
 859              		.section	.text.BMX_Init,"ax",%progbits
 860              		.align	1
 861              		.global	BMX_Init
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu fpv5-d16
 867              	BMX_Init:
 868              	.LVL26:
 869              	.LFB860:
 463:Src/main.c    **** 
 464:Src/main.c    **** /* USER CODE BEGIN 4 */
 465:Src/main.c    **** void BMX_Init(BMX_IMU_typedef *BMX_str){
 870              		.loc 1 465 40 is_stmt 1 view -0
 871              		.cfi_startproc
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 111


 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		.loc 1 465 40 is_stmt 0 view .LVU256
 875 0000 30B5     		push	{r4, r5, lr}
 876              	.LCFI18:
 877              		.cfi_def_cfa_offset 12
 878              		.cfi_offset 4, -12
 879              		.cfi_offset 5, -8
 880              		.cfi_offset 14, -4
 881 0002 83B0     		sub	sp, sp, #12
 882              	.LCFI19:
 883              		.cfi_def_cfa_offset 24
 884 0004 0446     		mov	r4, r0
 466:Src/main.c    **** 
 467:Src/main.c    ****   //initialization for BMX struct values
 468:Src/main.c    ****   BMX_str->i2c_handler_ptr=&hi2c4;
 885              		.loc 1 468 3 is_stmt 1 view .LVU257
 886              		.loc 1 468 27 is_stmt 0 view .LVU258
 887 0006 BA4B     		ldr	r3, .L54
 888 0008 0360     		str	r3, [r0]
 469:Src/main.c    ****   BMX_str->uart_hndler_ptr=&huart4;
 889              		.loc 1 469 3 is_stmt 1 view .LVU259
 890              		.loc 1 469 27 is_stmt 0 view .LVU260
 891 000a BA4B     		ldr	r3, .L54+4
 892 000c 4360     		str	r3, [r0, #4]
 470:Src/main.c    ****   BMX_str->acc_FS_conv=0.000122f; //[mg/LSB] to multiply the int16 value and obtain a float
 893              		.loc 1 470 3 is_stmt 1 view .LVU261
 894              		.loc 1 470 23 is_stmt 0 view .LVU262
 895 000e BA4B     		ldr	r3, .L54+8
 896 0010 C363     		str	r3, [r0, #60]	@ float
 471:Src/main.c    ****   BMX_str->gyro_FS_conv=0.0153f; //[deg/s/LSB] to multiply the int16 value and obtain a float
 897              		.loc 1 471 3 is_stmt 1 view .LVU263
 898              		.loc 1 471 24 is_stmt 0 view .LVU264
 899 0012 BA4B     		ldr	r3, .L54+12
 900 0014 8363     		str	r3, [r0, #56]	@ float
 472:Src/main.c    ****   BMX_str->T_samp=sample_time;
 901              		.loc 1 472 3 is_stmt 1 view .LVU265
 902              		.loc 1 472 18 is_stmt 0 view .LVU266
 903 0016 BA4B     		ldr	r3, .L54+16
 904 0018 1B68     		ldr	r3, [r3]	@ float
 905 001a C0F8A830 		str	r3, [r0, #168]	@ float
 473:Src/main.c    ****   BMX_str->LPF_const_raw=0.2334f; //constants for 10Hz CO and 10 ms sample time
 906              		.loc 1 473 3 is_stmt 1 view .LVU267
 907              		.loc 1 473 25 is_stmt 0 view .LVU268
 908 001e B94B     		ldr	r3, .L54+20
 909 0020 C0F8A030 		str	r3, [r0, #160]	@ float
 474:Src/main.c    ****   BMX_str->LPF_const_filt_1=0.5333f;
 910              		.loc 1 474 3 is_stmt 1 view .LVU269
 911              		.loc 1 474 28 is_stmt 0 view .LVU270
 912 0024 B84B     		ldr	r3, .L54+24
 913 0026 C0F8A430 		str	r3, [r0, #164]	@ float
 475:Src/main.c    **** 
 476:Src/main.c    ****   for(int init_count=0; init_count<3; init_count++){//set to 0 initial values
 914              		.loc 1 476 3 is_stmt 1 view .LVU271
 915              	.LBB56:
 916              		.loc 1 476 7 view .LVU272
 917              	.LVL27:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 112


 918              		.loc 1 476 11 is_stmt 0 view .LVU273
 919 002a 0023     		movs	r3, #0
 920              		.loc 1 476 3 view .LVU274
 921 002c 1DE0     		b	.L34
 922              	.LVL28:
 923              	.L35:
 477:Src/main.c    ****   
 478:Src/main.c    ****     BMX_str->Acceleration[init_count]=0.0f;
 924              		.loc 1 478 5 is_stmt 1 discriminator 3 view .LVU275
 925              		.loc 1 478 38 is_stmt 0 discriminator 3 view .LVU276
 926 002e 191D     		adds	r1, r3, #4
 927 0030 04EB8101 		add	r1, r4, r1, lsl #2
 928 0034 0022     		movs	r2, #0
 929 0036 4A60     		str	r2, [r1, #4]	@ float
 479:Src/main.c    ****     BMX_str->Omega[init_count]=0.0f;
 930              		.loc 1 479 5 is_stmt 1 discriminator 3 view .LVU277
 931              		.loc 1 479 31 is_stmt 0 discriminator 3 view .LVU278
 932 0038 991C     		adds	r1, r3, #2
 933 003a 04EB8101 		add	r1, r4, r1, lsl #2
 934 003e 0A60     		str	r2, [r1]	@ float
 480:Src/main.c    ****     BMX_str->Acc_LPFd[init_count]=0.0f;
 935              		.loc 1 480 5 is_stmt 1 discriminator 3 view .LVU279
 936              		.loc 1 480 34 is_stmt 0 discriminator 3 view .LVU280
 937 0040 03F11E01 		add	r1, r3, #30
 938 0044 04EB8101 		add	r1, r4, r1, lsl #2
 939 0048 4A60     		str	r2, [r1, #4]	@ float
 481:Src/main.c    ****     BMX_str->Omega_LPFd[init_count]=0.0f;
 940              		.loc 1 481 5 is_stmt 1 discriminator 3 view .LVU281
 941              		.loc 1 481 36 is_stmt 0 discriminator 3 view .LVU282
 942 004a 03F11C01 		add	r1, r3, #28
 943 004e 04EB8101 		add	r1, r4, r1, lsl #2
 944 0052 0A60     		str	r2, [r1]	@ float
 482:Src/main.c    ****     BMX_str->acc_st_bias[init_count]=0.0f;
 945              		.loc 1 482 5 is_stmt 1 discriminator 3 view .LVU283
 946              		.loc 1 482 37 is_stmt 0 discriminator 3 view .LVU284
 947 0054 03F11201 		add	r1, r3, #18
 948 0058 04EB8101 		add	r1, r4, r1, lsl #2
 949 005c 4A60     		str	r2, [r1, #4]	@ float
 483:Src/main.c    ****     BMX_str->gyro_st_bias[init_count]=0.0f;
 950              		.loc 1 483 5 is_stmt 1 discriminator 3 view .LVU285
 951              		.loc 1 483 38 is_stmt 0 discriminator 3 view .LVU286
 952 005e 03F11001 		add	r1, r3, #16
 953 0062 04EB8101 		add	r1, r4, r1, lsl #2
 954 0066 0A60     		str	r2, [r1]	@ float
 476:Src/main.c    ****   
 955              		.loc 1 476 39 is_stmt 1 discriminator 3 view .LVU287
 476:Src/main.c    ****   
 956              		.loc 1 476 49 is_stmt 0 discriminator 3 view .LVU288
 957 0068 0133     		adds	r3, r3, #1
 958              	.LVL29:
 959              	.L34:
 476:Src/main.c    ****   
 960              		.loc 1 476 25 is_stmt 1 discriminator 1 view .LVU289
 476:Src/main.c    ****   
 961              		.loc 1 476 3 is_stmt 0 discriminator 1 view .LVU290
 962 006a 022B     		cmp	r3, #2
 963 006c DFDD     		ble	.L35
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 113


 964              	.LBE56:
 484:Src/main.c    **** 
 485:Src/main.c    ****   }
 486:Src/main.c    **** 
 487:Src/main.c    ****   //Initialization for values of BMX---> device register settings
 488:Src/main.c    ****   //gyro init and config
 489:Src/main.c    **** 	buff[0] = GYRO_CONF_REG;
 965              		.loc 1 489 2 is_stmt 1 view .LVU291
 966              		.loc 1 489 10 is_stmt 0 view .LVU292
 967 006e A74A     		ldr	r2, .L54+28
 968 0070 4223     		movs	r3, #66
 969              	.LVL30:
 970              		.loc 1 489 10 view .LVU293
 971 0072 1370     		strb	r3, [r2]
 490:Src/main.c    **** 	buff[1] = 0b00101001;//set the Gyro conf register (see the red notebook page 10)
 972              		.loc 1 490 2 is_stmt 1 view .LVU294
 973              		.loc 1 490 10 is_stmt 0 view .LVU295
 974 0074 2923     		movs	r3, #41
 975 0076 5370     		strb	r3, [r2, #1]
 491:Src/main.c    ****   //set for 200Hz ODR and digital filter normal mode
 492:Src/main.c    ****   if(HAL_I2C_Master_Transmit(BMX_str->i2c_handler_ptr, BMX160Address, buff, 2, HAL_MAX_DELAY)==HAL_
 976              		.loc 1 492 3 is_stmt 1 view .LVU296
 977              		.loc 1 492 6 is_stmt 0 view .LVU297
 978 0078 4FF0FF33 		mov	r3, #-1
 979 007c 0093     		str	r3, [sp]
 980 007e 0223     		movs	r3, #2
 981 0080 D021     		movs	r1, #208
 982 0082 2068     		ldr	r0, [r4]
 983              	.LVL31:
 984              		.loc 1 492 6 view .LVU298
 985 0084 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 986              	.LVL32:
 987              		.loc 1 492 5 view .LVU299
 988 0088 0028     		cmp	r0, #0
 989 008a 40F0DC80 		bne	.L36
 493:Src/main.c    ****     sprintf((char*)buff, "Gyro conf OK!\n\r");
 990              		.loc 1 493 5 is_stmt 1 view .LVU300
 991 008e 9F4D     		ldr	r5, .L54+28
 992 0090 9F4B     		ldr	r3, .L54+32
 993 0092 0FCB     		ldm	r3, {r0, r1, r2, r3}
 994 0094 85E80F00 		stm	r5, {r0, r1, r2, r3}
 494:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 995              		.loc 1 494 5 view .LVU301
 996              		.loc 1 494 38 is_stmt 0 view .LVU302
 997 0098 2846     		mov	r0, r5
 998 009a FFF7FEFF 		bl	strlen
 999              	.LVL33:
 1000              		.loc 1 494 5 view .LVU303
 1001 009e 4FF0FF33 		mov	r3, #-1
 1002 00a2 82B2     		uxth	r2, r0
 1003 00a4 2946     		mov	r1, r5
 1004 00a6 9348     		ldr	r0, .L54+4
 1005 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 1006              	.LVL34:
 1007              	.L37:
 495:Src/main.c    ****   } else{
 496:Src/main.c    ****     sprintf((char*)buff, "ERROR BMX\n\r");
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 114


 497:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 498:Src/main.c    ****   }
 499:Src/main.c    **** 
 500:Src/main.c    ****   //wait 
 501:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
 1008              		.loc 1 501 3 is_stmt 1 view .LVU304
 1009              	.LBB57:
 1010              	.LBI57:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1011              		.loc 3 1505 22 view .LVU305
 1012              	.LBB58:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1013              		.loc 3 1507 3 view .LVU306
 1014 00ac 994B     		ldr	r3, .L54+36
 1015 00ae 0022     		movs	r2, #0
 1016 00b0 5A62     		str	r2, [r3, #36]
 1017              	.LVL35:
 1018              	.L38:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1019              		.loc 3 1507 3 is_stmt 0 view .LVU307
 1020              	.LBE58:
 1021              	.LBE57:
 502:Src/main.c    ****   while(LL_TIM_GetCounter(TIM1)<10000){}
 1022              		.loc 1 502 40 is_stmt 1 discriminator 1 view .LVU308
 1023              		.loc 1 502 8 discriminator 1 view .LVU309
 1024              	.LBB59:
 1025              	.LBI59:
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1026              		.loc 3 1518 26 discriminator 1 view .LVU310
 1027              	.LBB60:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1028              		.loc 3 1520 3 discriminator 1 view .LVU311
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1029              		.loc 3 1520 10 is_stmt 0 discriminator 1 view .LVU312
 1030 00b2 984B     		ldr	r3, .L54+36
 1031 00b4 5A6A     		ldr	r2, [r3, #36]
 1032              	.LVL36:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1033              		.loc 3 1520 10 discriminator 1 view .LVU313
 1034              	.LBE60:
 1035              	.LBE59:
 1036              		.loc 1 502 8 discriminator 1 view .LVU314
 1037 00b6 42F20F73 		movw	r3, #9999
 1038 00ba 9A42     		cmp	r2, r3
 1039 00bc F9D9     		bls	.L38
 503:Src/main.c    **** 
 504:Src/main.c    **** 	//acc init and config
 505:Src/main.c    **** 	buff[0] = ACC_CONF_REG;
 1040              		.loc 1 505 2 is_stmt 1 view .LVU315
 1041              		.loc 1 505 10 is_stmt 0 view .LVU316
 1042 00be 934A     		ldr	r2, .L54+28
 1043 00c0 4023     		movs	r3, #64
 1044 00c2 1370     		strb	r3, [r2]
 506:Src/main.c    **** 	buff[1] = 0b00101001;//set the Acc conf register to 200Hz for output data rate and digital filter 
 1045              		.loc 1 506 2 is_stmt 1 view .LVU317
 1046              		.loc 1 506 10 is_stmt 0 view .LVU318
 1047 00c4 2923     		movs	r3, #41
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 115


 1048 00c6 5370     		strb	r3, [r2, #1]
 507:Src/main.c    ****   if(HAL_I2C_Master_Transmit(BMX_str->i2c_handler_ptr, BMX160Address, buff, 2, HAL_MAX_DELAY)==HAL_
 1049              		.loc 1 507 3 is_stmt 1 view .LVU319
 1050              		.loc 1 507 6 is_stmt 0 view .LVU320
 1051 00c8 4FF0FF33 		mov	r3, #-1
 1052 00cc 0093     		str	r3, [sp]
 1053 00ce 0223     		movs	r3, #2
 1054 00d0 D021     		movs	r1, #208
 1055 00d2 2068     		ldr	r0, [r4]
 1056 00d4 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1057              	.LVL37:
 1058              		.loc 1 507 5 view .LVU321
 1059 00d8 0028     		cmp	r0, #0
 1060 00da 40F0C580 		bne	.L39
 508:Src/main.c    ****     sprintf((char*)buff, "Gyro conf OK!\n\r");
 1061              		.loc 1 508 5 is_stmt 1 view .LVU322
 1062 00de 8B4D     		ldr	r5, .L54+28
 1063 00e0 8B4B     		ldr	r3, .L54+32
 1064 00e2 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1065 00e4 85E80F00 		stm	r5, {r0, r1, r2, r3}
 509:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1066              		.loc 1 509 5 view .LVU323
 1067              		.loc 1 509 38 is_stmt 0 view .LVU324
 1068 00e8 2846     		mov	r0, r5
 1069 00ea FFF7FEFF 		bl	strlen
 1070              	.LVL38:
 1071              		.loc 1 509 5 view .LVU325
 1072 00ee 4FF0FF33 		mov	r3, #-1
 1073 00f2 82B2     		uxth	r2, r0
 1074 00f4 2946     		mov	r1, r5
 1075 00f6 7F48     		ldr	r0, .L54+4
 1076 00f8 FFF7FEFF 		bl	HAL_UART_Transmit
 1077              	.LVL39:
 1078              	.L40:
 510:Src/main.c    ****   } else{
 511:Src/main.c    ****     sprintf((char*)buff, "ERROR BMX\n\r");
 512:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 513:Src/main.c    ****   }
 514:Src/main.c    **** 
 515:Src/main.c    ****   //wait 
 516:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
 1079              		.loc 1 516 3 is_stmt 1 view .LVU326
 1080              	.LBB61:
 1081              	.LBI61:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1082              		.loc 3 1505 22 view .LVU327
 1083              	.LBB62:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1084              		.loc 3 1507 3 view .LVU328
 1085 00fc 854B     		ldr	r3, .L54+36
 1086 00fe 0022     		movs	r2, #0
 1087 0100 5A62     		str	r2, [r3, #36]
 1088              	.LVL40:
 1089              	.L41:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1090              		.loc 3 1507 3 is_stmt 0 view .LVU329
 1091              	.LBE62:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 116


 1092              	.LBE61:
 517:Src/main.c    ****   while(LL_TIM_GetCounter(TIM1)<10000){}
 1093              		.loc 1 517 40 is_stmt 1 discriminator 1 view .LVU330
 1094              		.loc 1 517 8 discriminator 1 view .LVU331
 1095              	.LBB63:
 1096              	.LBI63:
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1097              		.loc 3 1518 26 discriminator 1 view .LVU332
 1098              	.LBB64:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1099              		.loc 3 1520 3 discriminator 1 view .LVU333
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1100              		.loc 3 1520 10 is_stmt 0 discriminator 1 view .LVU334
 1101 0102 844B     		ldr	r3, .L54+36
 1102 0104 5A6A     		ldr	r2, [r3, #36]
 1103              	.LVL41:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1104              		.loc 3 1520 10 discriminator 1 view .LVU335
 1105              	.LBE64:
 1106              	.LBE63:
 1107              		.loc 1 517 8 discriminator 1 view .LVU336
 1108 0106 42F20F73 		movw	r3, #9999
 1109 010a 9A42     		cmp	r2, r3
 1110 010c F9D9     		bls	.L41
 518:Src/main.c    **** 
 519:Src/main.c    **** 	//acc range config
 520:Src/main.c    **** 	buff[0] = ACC_RANGE_REG;
 1111              		.loc 1 520 2 is_stmt 1 view .LVU337
 1112              		.loc 1 520 10 is_stmt 0 view .LVU338
 1113 010e 7F4A     		ldr	r2, .L54+28
 1114 0110 4123     		movs	r3, #65
 1115 0112 1370     		strb	r3, [r2]
 521:Src/main.c    **** 	buff[1] = 0b00000101;//set the Acc range register (see the red notebook appropriate page)
 1116              		.loc 1 521 2 is_stmt 1 view .LVU339
 1117              		.loc 1 521 10 is_stmt 0 view .LVU340
 1118 0114 0523     		movs	r3, #5
 1119 0116 5370     		strb	r3, [r2, #1]
 522:Src/main.c    ****     //this set for a +-4g full scale -> 0.000122 g/LSB Coeff to multiply to in16 data to obtain flo
 523:Src/main.c    **** 	if(HAL_I2C_Master_Transmit(BMX_str->i2c_handler_ptr, BMX160Address, buff, 2, HAL_MAX_DELAY)==HAL_O
 1120              		.loc 1 523 2 is_stmt 1 view .LVU341
 1121              		.loc 1 523 5 is_stmt 0 view .LVU342
 1122 0118 4FF0FF33 		mov	r3, #-1
 1123 011c 0093     		str	r3, [sp]
 1124 011e 0223     		movs	r3, #2
 1125 0120 D021     		movs	r1, #208
 1126 0122 2068     		ldr	r0, [r4]
 1127 0124 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1128              	.LVL42:
 1129              		.loc 1 523 4 view .LVU343
 1130 0128 0028     		cmp	r0, #0
 1131 012a 40F0AE80 		bne	.L42
 524:Src/main.c    ****     sprintf((char*)buff, "Gyro conf OK!\n\r");
 1132              		.loc 1 524 5 is_stmt 1 view .LVU344
 1133 012e 774D     		ldr	r5, .L54+28
 1134 0130 774B     		ldr	r3, .L54+32
 1135 0132 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1136 0134 85E80F00 		stm	r5, {r0, r1, r2, r3}
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 117


 525:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1137              		.loc 1 525 5 view .LVU345
 1138              		.loc 1 525 38 is_stmt 0 view .LVU346
 1139 0138 2846     		mov	r0, r5
 1140 013a FFF7FEFF 		bl	strlen
 1141              	.LVL43:
 1142              		.loc 1 525 5 view .LVU347
 1143 013e 4FF0FF33 		mov	r3, #-1
 1144 0142 82B2     		uxth	r2, r0
 1145 0144 2946     		mov	r1, r5
 1146 0146 6B48     		ldr	r0, .L54+4
 1147 0148 FFF7FEFF 		bl	HAL_UART_Transmit
 1148              	.LVL44:
 1149              	.L43:
 526:Src/main.c    ****   } else{
 527:Src/main.c    ****     sprintf((char*)buff, "ERROR BMX\n\r");
 528:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 529:Src/main.c    ****   }
 530:Src/main.c    **** 
 531:Src/main.c    ****   //wait 
 532:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
 1150              		.loc 1 532 3 is_stmt 1 view .LVU348
 1151              	.LBB65:
 1152              	.LBI65:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1153              		.loc 3 1505 22 view .LVU349
 1154              	.LBB66:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1155              		.loc 3 1507 3 view .LVU350
 1156 014c 714B     		ldr	r3, .L54+36
 1157 014e 0022     		movs	r2, #0
 1158 0150 5A62     		str	r2, [r3, #36]
 1159              	.LVL45:
 1160              	.L44:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1161              		.loc 3 1507 3 is_stmt 0 view .LVU351
 1162              	.LBE66:
 1163              	.LBE65:
 533:Src/main.c    ****   while(LL_TIM_GetCounter(TIM1)<10000){}
 1164              		.loc 1 533 40 is_stmt 1 discriminator 1 view .LVU352
 1165              		.loc 1 533 8 discriminator 1 view .LVU353
 1166              	.LBB67:
 1167              	.LBI67:
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1168              		.loc 3 1518 26 discriminator 1 view .LVU354
 1169              	.LBB68:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1170              		.loc 3 1520 3 discriminator 1 view .LVU355
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1171              		.loc 3 1520 10 is_stmt 0 discriminator 1 view .LVU356
 1172 0152 704B     		ldr	r3, .L54+36
 1173 0154 5A6A     		ldr	r2, [r3, #36]
 1174              	.LVL46:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1175              		.loc 3 1520 10 discriminator 1 view .LVU357
 1176              	.LBE68:
 1177              	.LBE67:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 118


 1178              		.loc 1 533 8 discriminator 1 view .LVU358
 1179 0156 42F20F73 		movw	r3, #9999
 1180 015a 9A42     		cmp	r2, r3
 1181 015c F9D9     		bls	.L44
 534:Src/main.c    **** 
 535:Src/main.c    ****     //gyro range config
 536:Src/main.c    **** 	buff[0]=GYRO_RANGE_REG;
 1182              		.loc 1 536 2 is_stmt 1 view .LVU359
 1183              		.loc 1 536 9 is_stmt 0 view .LVU360
 1184 015e 6B4A     		ldr	r2, .L54+28
 1185 0160 4323     		movs	r3, #67
 1186 0162 1370     		strb	r3, [r2]
 537:Src/main.c    **** 	buff[1]=0b00000010;//set the gyro range register (see the red notebook appropriate page)
 1187              		.loc 1 537 2 is_stmt 1 view .LVU361
 1188              		.loc 1 537 9 is_stmt 0 view .LVU362
 1189 0164 0223     		movs	r3, #2
 1190 0166 5370     		strb	r3, [r2, #1]
 538:Src/main.c    ****     //this set for a +-500 deg/s full scale -> 0.0153 deg/s/LSB Coeff to multiply to in16 data to o
 539:Src/main.c    **** 	if(HAL_I2C_Master_Transmit(BMX_str->i2c_handler_ptr, BMX160Address, buff, 2, HAL_MAX_DELAY)==HAL_O
 1191              		.loc 1 539 2 is_stmt 1 view .LVU363
 1192              		.loc 1 539 5 is_stmt 0 view .LVU364
 1193 0168 4FF0FF31 		mov	r1, #-1
 1194 016c 0091     		str	r1, [sp]
 1195 016e D021     		movs	r1, #208
 1196 0170 2068     		ldr	r0, [r4]
 1197 0172 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1198              	.LVL47:
 1199              		.loc 1 539 4 view .LVU365
 1200 0176 0028     		cmp	r0, #0
 1201 0178 40F09880 		bne	.L45
 540:Src/main.c    ****     sprintf((char*)buff, "Gyro conf OK!\n\r");
 1202              		.loc 1 540 5 is_stmt 1 view .LVU366
 1203 017c 634D     		ldr	r5, .L54+28
 1204 017e 644B     		ldr	r3, .L54+32
 1205 0180 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1206 0182 85E80F00 		stm	r5, {r0, r1, r2, r3}
 541:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1207              		.loc 1 541 5 view .LVU367
 1208              		.loc 1 541 38 is_stmt 0 view .LVU368
 1209 0186 2846     		mov	r0, r5
 1210 0188 FFF7FEFF 		bl	strlen
 1211              	.LVL48:
 1212              		.loc 1 541 5 view .LVU369
 1213 018c 4FF0FF33 		mov	r3, #-1
 1214 0190 82B2     		uxth	r2, r0
 1215 0192 2946     		mov	r1, r5
 1216 0194 5748     		ldr	r0, .L54+4
 1217 0196 FFF7FEFF 		bl	HAL_UART_Transmit
 1218              	.LVL49:
 1219              	.L46:
 542:Src/main.c    ****   } else{
 543:Src/main.c    ****     sprintf((char*)buff, "ERROR BMX\n\r");
 544:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 545:Src/main.c    ****   }
 546:Src/main.c    **** 
 547:Src/main.c    ****   //wait 
 548:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 119


 1220              		.loc 1 548 3 is_stmt 1 view .LVU370
 1221              	.LBB69:
 1222              	.LBI69:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1223              		.loc 3 1505 22 view .LVU371
 1224              	.LBB70:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1225              		.loc 3 1507 3 view .LVU372
 1226 019a 5E4B     		ldr	r3, .L54+36
 1227 019c 0022     		movs	r2, #0
 1228 019e 5A62     		str	r2, [r3, #36]
 1229              	.LVL50:
 1230              	.L47:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1231              		.loc 3 1507 3 is_stmt 0 view .LVU373
 1232              	.LBE70:
 1233              	.LBE69:
 549:Src/main.c    ****   while(LL_TIM_GetCounter(TIM1)<10000){}
 1234              		.loc 1 549 40 is_stmt 1 discriminator 1 view .LVU374
 1235              		.loc 1 549 8 discriminator 1 view .LVU375
 1236              	.LBB71:
 1237              	.LBI71:
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1238              		.loc 3 1518 26 discriminator 1 view .LVU376
 1239              	.LBB72:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1240              		.loc 3 1520 3 discriminator 1 view .LVU377
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1241              		.loc 3 1520 10 is_stmt 0 discriminator 1 view .LVU378
 1242 01a0 5C4B     		ldr	r3, .L54+36
 1243 01a2 5A6A     		ldr	r2, [r3, #36]
 1244              	.LVL51:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1245              		.loc 3 1520 10 discriminator 1 view .LVU379
 1246              	.LBE72:
 1247              	.LBE71:
 1248              		.loc 1 549 8 discriminator 1 view .LVU380
 1249 01a4 42F20F73 		movw	r3, #9999
 1250 01a8 9A42     		cmp	r2, r3
 1251 01aa F9D9     		bls	.L47
 550:Src/main.c    **** 
 551:Src/main.c    ****   //power mode to normal is set
 552:Src/main.c    ****   //change the power mode to normal for the gyro
 553:Src/main.c    **** 	buff[0] = BMX_PM_REG;
 1252              		.loc 1 553 2 is_stmt 1 view .LVU381
 1253              		.loc 1 553 10 is_stmt 0 view .LVU382
 1254 01ac 574A     		ldr	r2, .L54+28
 1255 01ae 7E23     		movs	r3, #126
 1256 01b0 1370     		strb	r3, [r2]
 554:Src/main.c    ****   buff[1] = 0x15;//command for normal mode for gyro;
 1257              		.loc 1 554 3 is_stmt 1 view .LVU383
 1258              		.loc 1 554 11 is_stmt 0 view .LVU384
 1259 01b2 1523     		movs	r3, #21
 1260 01b4 5370     		strb	r3, [r2, #1]
 555:Src/main.c    **** 	if(HAL_I2C_Master_Transmit(BMX_str->i2c_handler_ptr, BMX160Address, buff, 2, HAL_MAX_DELAY)==HAL_O
 1261              		.loc 1 555 2 is_stmt 1 view .LVU385
 1262              		.loc 1 555 5 is_stmt 0 view .LVU386
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 120


 1263 01b6 4FF0FF33 		mov	r3, #-1
 1264 01ba 0093     		str	r3, [sp]
 1265 01bc 0223     		movs	r3, #2
 1266 01be D021     		movs	r1, #208
 1267 01c0 2068     		ldr	r0, [r4]
 1268 01c2 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1269              	.LVL52:
 1270              		.loc 1 555 4 view .LVU387
 1271 01c6 0028     		cmp	r0, #0
 1272 01c8 40F08180 		bne	.L48
 556:Src/main.c    ****     sprintf((char*)buff, "Gyro conf OK!\n\r");
 1273              		.loc 1 556 5 is_stmt 1 view .LVU388
 1274 01cc 4F4D     		ldr	r5, .L54+28
 1275 01ce 504B     		ldr	r3, .L54+32
 1276 01d0 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1277 01d2 85E80F00 		stm	r5, {r0, r1, r2, r3}
 557:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1278              		.loc 1 557 5 view .LVU389
 1279              		.loc 1 557 38 is_stmt 0 view .LVU390
 1280 01d6 2846     		mov	r0, r5
 1281 01d8 FFF7FEFF 		bl	strlen
 1282              	.LVL53:
 1283              		.loc 1 557 5 view .LVU391
 1284 01dc 4FF0FF33 		mov	r3, #-1
 1285 01e0 82B2     		uxth	r2, r0
 1286 01e2 2946     		mov	r1, r5
 1287 01e4 4348     		ldr	r0, .L54+4
 1288 01e6 FFF7FEFF 		bl	HAL_UART_Transmit
 1289              	.LVL54:
 1290              	.L49:
 558:Src/main.c    ****   } else{
 559:Src/main.c    ****     sprintf((char*)buff, "ERROR BMX\n\r");
 560:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 561:Src/main.c    ****   }
 562:Src/main.c    **** 
 563:Src/main.c    ****   //wait 
 564:Src/main.c    ****   HAL_Delay(500);
 1291              		.loc 1 564 3 is_stmt 1 view .LVU392
 1292 01ea 4FF4FA70 		mov	r0, #500
 1293 01ee FFF7FEFF 		bl	HAL_Delay
 1294              	.LVL55:
 565:Src/main.c    **** 
 566:Src/main.c    **** 	//change the power mode to normal for the Acc see appropriate page of the notebook
 567:Src/main.c    ****   //the power mode is changed writing two times to the PMU reg
 568:Src/main.c    **** 	buff[0] = BMX_PM_REG;
 1295              		.loc 1 568 2 view .LVU393
 1296              		.loc 1 568 10 is_stmt 0 view .LVU394
 1297 01f2 464A     		ldr	r2, .L54+28
 1298 01f4 7E23     		movs	r3, #126
 1299 01f6 1370     		strb	r3, [r2]
 569:Src/main.c    **** 	buff[1] = 0x11;//command for normal mode for accelerometer;
 1300              		.loc 1 569 2 is_stmt 1 view .LVU395
 1301              		.loc 1 569 10 is_stmt 0 view .LVU396
 1302 01f8 1123     		movs	r3, #17
 1303 01fa 5370     		strb	r3, [r2, #1]
 570:Src/main.c    **** 	if(HAL_I2C_Master_Transmit(BMX_str->i2c_handler_ptr, BMX160Address, buff, 2, HAL_MAX_DELAY)==HAL_O
 1304              		.loc 1 570 2 is_stmt 1 view .LVU397
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 121


 1305              		.loc 1 570 5 is_stmt 0 view .LVU398
 1306 01fc 4FF0FF33 		mov	r3, #-1
 1307 0200 0093     		str	r3, [sp]
 1308 0202 0223     		movs	r3, #2
 1309 0204 D021     		movs	r1, #208
 1310 0206 2068     		ldr	r0, [r4]
 1311 0208 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1312              	.LVL56:
 1313              		.loc 1 570 4 view .LVU399
 1314 020c 0028     		cmp	r0, #0
 1315 020e 40F08780 		bne	.L50
 571:Src/main.c    ****     sprintf((char*)buff, "Acc pow OK!\n\r");
 1316              		.loc 1 571 5 is_stmt 1 view .LVU400
 1317 0212 3E4D     		ldr	r5, .L54+28
 1318 0214 404B     		ldr	r3, .L54+40
 1319 0216 2C46     		mov	r4, r5
 1320              	.LVL57:
 1321              		.loc 1 571 5 is_stmt 0 view .LVU401
 1322 0218 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1323 021a 07C4     		stmia	r4!, {r0, r1, r2}
 1324 021c 2380     		strh	r3, [r4]	@ movhi
 572:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1325              		.loc 1 572 5 is_stmt 1 view .LVU402
 1326              		.loc 1 572 38 is_stmt 0 view .LVU403
 1327 021e 2846     		mov	r0, r5
 1328 0220 FFF7FEFF 		bl	strlen
 1329              	.LVL58:
 1330              		.loc 1 572 5 view .LVU404
 1331 0224 4FF0FF33 		mov	r3, #-1
 1332 0228 82B2     		uxth	r2, r0
 1333 022a 2946     		mov	r1, r5
 1334 022c 3148     		ldr	r0, .L54+4
 1335 022e FFF7FEFF 		bl	HAL_UART_Transmit
 1336              	.LVL59:
 1337              	.L51:
 573:Src/main.c    ****   } else{
 574:Src/main.c    ****     sprintf((char*)buff, "ERROR ACP\n\r");
 575:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 576:Src/main.c    ****   }
 577:Src/main.c    **** 
 578:Src/main.c    ****   //wait 
 579:Src/main.c    ****   LL_TIM_SetCounter(TIM1, 0);
 1338              		.loc 1 579 3 is_stmt 1 view .LVU405
 1339              	.LBB73:
 1340              	.LBI73:
1505:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1341              		.loc 3 1505 22 view .LVU406
 1342              	.LBB74:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1343              		.loc 3 1507 3 view .LVU407
 1344 0232 384B     		ldr	r3, .L54+36
 1345 0234 0022     		movs	r2, #0
 1346 0236 5A62     		str	r2, [r3, #36]
 1347              	.LVL60:
 1348              	.L52:
1507:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1349              		.loc 3 1507 3 is_stmt 0 view .LVU408
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 122


 1350              	.LBE74:
 1351              	.LBE73:
 580:Src/main.c    ****   while(LL_TIM_GetCounter(TIM1)<600){}
 1352              		.loc 1 580 38 is_stmt 1 discriminator 1 view .LVU409
 1353              		.loc 1 580 8 discriminator 1 view .LVU410
 1354              	.LBB75:
 1355              	.LBI75:
1518:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1356              		.loc 3 1518 26 discriminator 1 view .LVU411
 1357              	.LBB76:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1358              		.loc 3 1520 3 discriminator 1 view .LVU412
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1359              		.loc 3 1520 10 is_stmt 0 discriminator 1 view .LVU413
 1360 0238 364B     		ldr	r3, .L54+36
 1361 023a 5B6A     		ldr	r3, [r3, #36]
 1362              	.LVL61:
1520:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1363              		.loc 3 1520 10 discriminator 1 view .LVU414
 1364              	.LBE76:
 1365              	.LBE75:
 1366              		.loc 1 580 8 discriminator 1 view .LVU415
 1367 023c B3F5167F 		cmp	r3, #600
 1368 0240 FAD3     		bcc	.L52
 581:Src/main.c    **** 
 582:Src/main.c    **** }
 1369              		.loc 1 582 1 view .LVU416
 1370 0242 03B0     		add	sp, sp, #12
 1371              	.LCFI20:
 1372              		.cfi_remember_state
 1373              		.cfi_def_cfa_offset 12
 1374              		@ sp needed
 1375 0244 30BD     		pop	{r4, r5, pc}
 1376              	.LVL62:
 1377              	.L36:
 1378              	.LCFI21:
 1379              		.cfi_restore_state
 496:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1380              		.loc 1 496 5 is_stmt 1 view .LVU417
 1381 0246 314D     		ldr	r5, .L54+28
 1382 0248 344B     		ldr	r3, .L54+44
 1383 024a 93E80700 		ldm	r3, {r0, r1, r2}
 1384 024e 85E80700 		stm	r5, {r0, r1, r2}
 497:Src/main.c    ****   }
 1385              		.loc 1 497 5 view .LVU418
 497:Src/main.c    ****   }
 1386              		.loc 1 497 38 is_stmt 0 view .LVU419
 1387 0252 2846     		mov	r0, r5
 1388 0254 FFF7FEFF 		bl	strlen
 1389              	.LVL63:
 497:Src/main.c    ****   }
 1390              		.loc 1 497 5 view .LVU420
 1391 0258 4FF0FF33 		mov	r3, #-1
 1392 025c 82B2     		uxth	r2, r0
 1393 025e 2946     		mov	r1, r5
 1394 0260 2448     		ldr	r0, .L54+4
 1395 0262 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 123


 1396              	.LVL64:
 1397 0266 21E7     		b	.L37
 1398              	.L39:
 511:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1399              		.loc 1 511 5 is_stmt 1 view .LVU421
 1400 0268 284D     		ldr	r5, .L54+28
 1401 026a 2C4B     		ldr	r3, .L54+44
 1402 026c 93E80700 		ldm	r3, {r0, r1, r2}
 1403 0270 85E80700 		stm	r5, {r0, r1, r2}
 512:Src/main.c    ****   }
 1404              		.loc 1 512 5 view .LVU422
 512:Src/main.c    ****   }
 1405              		.loc 1 512 38 is_stmt 0 view .LVU423
 1406 0274 2846     		mov	r0, r5
 1407 0276 FFF7FEFF 		bl	strlen
 1408              	.LVL65:
 512:Src/main.c    ****   }
 1409              		.loc 1 512 5 view .LVU424
 1410 027a 4FF0FF33 		mov	r3, #-1
 1411 027e 82B2     		uxth	r2, r0
 1412 0280 2946     		mov	r1, r5
 1413 0282 1C48     		ldr	r0, .L54+4
 1414 0284 FFF7FEFF 		bl	HAL_UART_Transmit
 1415              	.LVL66:
 1416 0288 38E7     		b	.L40
 1417              	.L42:
 527:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1418              		.loc 1 527 5 is_stmt 1 view .LVU425
 1419 028a 204D     		ldr	r5, .L54+28
 1420 028c 234B     		ldr	r3, .L54+44
 1421 028e 93E80700 		ldm	r3, {r0, r1, r2}
 1422 0292 85E80700 		stm	r5, {r0, r1, r2}
 528:Src/main.c    ****   }
 1423              		.loc 1 528 5 view .LVU426
 528:Src/main.c    ****   }
 1424              		.loc 1 528 38 is_stmt 0 view .LVU427
 1425 0296 2846     		mov	r0, r5
 1426 0298 FFF7FEFF 		bl	strlen
 1427              	.LVL67:
 528:Src/main.c    ****   }
 1428              		.loc 1 528 5 view .LVU428
 1429 029c 4FF0FF33 		mov	r3, #-1
 1430 02a0 82B2     		uxth	r2, r0
 1431 02a2 2946     		mov	r1, r5
 1432 02a4 1348     		ldr	r0, .L54+4
 1433 02a6 FFF7FEFF 		bl	HAL_UART_Transmit
 1434              	.LVL68:
 1435 02aa 4FE7     		b	.L43
 1436              	.L45:
 543:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1437              		.loc 1 543 5 is_stmt 1 view .LVU429
 1438 02ac 174D     		ldr	r5, .L54+28
 1439 02ae 1B4B     		ldr	r3, .L54+44
 1440 02b0 93E80700 		ldm	r3, {r0, r1, r2}
 1441 02b4 85E80700 		stm	r5, {r0, r1, r2}
 544:Src/main.c    ****   }
 1442              		.loc 1 544 5 view .LVU430
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 124


 544:Src/main.c    ****   }
 1443              		.loc 1 544 38 is_stmt 0 view .LVU431
 1444 02b8 2846     		mov	r0, r5
 1445 02ba FFF7FEFF 		bl	strlen
 1446              	.LVL69:
 544:Src/main.c    ****   }
 1447              		.loc 1 544 5 view .LVU432
 1448 02be 4FF0FF33 		mov	r3, #-1
 1449 02c2 82B2     		uxth	r2, r0
 1450 02c4 2946     		mov	r1, r5
 1451 02c6 0B48     		ldr	r0, .L54+4
 1452 02c8 FFF7FEFF 		bl	HAL_UART_Transmit
 1453              	.LVL70:
 1454 02cc 65E7     		b	.L46
 1455              	.L48:
 559:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1456              		.loc 1 559 5 is_stmt 1 view .LVU433
 1457 02ce 0F4D     		ldr	r5, .L54+28
 1458 02d0 124B     		ldr	r3, .L54+44
 1459 02d2 93E80700 		ldm	r3, {r0, r1, r2}
 1460 02d6 85E80700 		stm	r5, {r0, r1, r2}
 560:Src/main.c    ****   }
 1461              		.loc 1 560 5 view .LVU434
 560:Src/main.c    ****   }
 1462              		.loc 1 560 38 is_stmt 0 view .LVU435
 1463 02da 2846     		mov	r0, r5
 1464 02dc FFF7FEFF 		bl	strlen
 1465              	.LVL71:
 560:Src/main.c    ****   }
 1466              		.loc 1 560 5 view .LVU436
 1467 02e0 4FF0FF33 		mov	r3, #-1
 1468 02e4 82B2     		uxth	r2, r0
 1469 02e6 2946     		mov	r1, r5
 1470 02e8 0248     		ldr	r0, .L54+4
 1471 02ea FFF7FEFF 		bl	HAL_UART_Transmit
 1472              	.LVL72:
 1473 02ee 7CE7     		b	.L49
 1474              	.L55:
 1475              		.align	2
 1476              	.L54:
 1477 02f0 00000000 		.word	.LANCHOR0
 1478 02f4 00000000 		.word	.LANCHOR2
 1479 02f8 40DAFF38 		.word	956291648
 1480 02fc DAAC7A3C 		.word	1014672602
 1481 0300 00000000 		.word	.LANCHOR4
 1482 0304 69006F3E 		.word	1047461993
 1483 0308 5986083F 		.word	1057523289
 1484 030c 00000000 		.word	.LANCHOR5
 1485 0310 00000000 		.word	.LC0
 1486 0314 00000140 		.word	1073807360
 1487 0318 1C000000 		.word	.LC2
 1488 031c 10000000 		.word	.LC1
 1489              	.L50:
 574:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1490              		.loc 1 574 5 is_stmt 1 view .LVU437
 1491 0320 084C     		ldr	r4, .L56
 1492              	.LVL73:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 125


 574:Src/main.c    ****     HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 1493              		.loc 1 574 5 is_stmt 0 view .LVU438
 1494 0322 094B     		ldr	r3, .L56+4
 1495 0324 93E80700 		ldm	r3, {r0, r1, r2}
 1496 0328 84E80700 		stm	r4, {r0, r1, r2}
 575:Src/main.c    ****   }
 1497              		.loc 1 575 5 is_stmt 1 view .LVU439
 575:Src/main.c    ****   }
 1498              		.loc 1 575 38 is_stmt 0 view .LVU440
 1499 032c 2046     		mov	r0, r4
 1500 032e FFF7FEFF 		bl	strlen
 1501              	.LVL74:
 575:Src/main.c    ****   }
 1502              		.loc 1 575 5 view .LVU441
 1503 0332 4FF0FF33 		mov	r3, #-1
 1504 0336 82B2     		uxth	r2, r0
 1505 0338 2146     		mov	r1, r4
 1506 033a 0448     		ldr	r0, .L56+8
 1507 033c FFF7FEFF 		bl	HAL_UART_Transmit
 1508              	.LVL75:
 1509 0340 77E7     		b	.L51
 1510              	.L57:
 1511 0342 00BF     		.align	2
 1512              	.L56:
 1513 0344 00000000 		.word	.LANCHOR5
 1514 0348 2C000000 		.word	.LC3
 1515 034c 00000000 		.word	.LANCHOR2
 1516              		.cfi_endproc
 1517              	.LFE860:
 1519              		.section	.text.main,"ax",%progbits
 1520              		.align	1
 1521              		.global	main
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1525              		.fpu fpv5-d16
 1527              	main:
 1528              	.LFB851:
  98:Src/main.c    ****   /* USER CODE BEGIN 1 */
 1529              		.loc 1 98 1 is_stmt 1 view -0
 1530              		.cfi_startproc
 1531              		@ Volatile: function does not return.
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 1534 0000 08B5     		push	{r3, lr}
 1535              	.LCFI22:
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 3, -8
 1538              		.cfi_offset 14, -4
 107:Src/main.c    **** 
 1539              		.loc 1 107 3 view .LVU443
 1540 0002 FFF7FEFF 		bl	HAL_Init
 1541              	.LVL76:
 114:Src/main.c    **** 
 1542              		.loc 1 114 3 view .LVU444
 1543 0006 FFF7FEFF 		bl	SystemClock_Config
 1544              	.LVL77:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 126


 121:Src/main.c    ****   MX_DMA_Init();
 1545              		.loc 1 121 3 view .LVU445
 1546 000a FFF7FEFF 		bl	MX_GPIO_Init
 1547              	.LVL78:
 122:Src/main.c    ****   MX_I2C4_Init();
 1548              		.loc 1 122 3 view .LVU446
 1549 000e FFF7FEFF 		bl	MX_DMA_Init
 1550              	.LVL79:
 123:Src/main.c    ****   MX_TIM2_Init();
 1551              		.loc 1 123 3 view .LVU447
 1552 0012 FFF7FEFF 		bl	MX_I2C4_Init
 1553              	.LVL80:
 124:Src/main.c    ****   MX_UART4_Init();
 1554              		.loc 1 124 3 view .LVU448
 1555 0016 FFF7FEFF 		bl	MX_TIM2_Init
 1556              	.LVL81:
 125:Src/main.c    ****   MX_UART7_Init();
 1557              		.loc 1 125 3 view .LVU449
 1558 001a FFF7FEFF 		bl	MX_UART4_Init
 1559              	.LVL82:
 126:Src/main.c    ****   MX_TIM1_Init();
 1560              		.loc 1 126 3 view .LVU450
 1561 001e FFF7FEFF 		bl	MX_UART7_Init
 1562              	.LVL83:
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 1563              		.loc 1 127 3 view .LVU451
 1564 0022 FFF7FEFF 		bl	MX_TIM1_Init
 1565              	.LVL84:
 132:Src/main.c    **** 
 1566              		.loc 1 132 3 view .LVU452
 1567 0026 4FF47A70 		mov	r0, #1000
 1568 002a FFF7FEFF 		bl	HAL_Delay
 1569              	.LVL85:
 134:Src/main.c    **** 
 1570              		.loc 1 134 3 view .LVU453
 1571              	.LBB77:
 1572              	.LBI77:
1263:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** {
 1573              		.loc 3 1263 22 view .LVU454
 1574              	.LBB78:
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1575              		.loc 3 1265 3 view .LVU455
 1576 002e 0F4A     		ldr	r2, .L61
 1577 0030 1368     		ldr	r3, [r2]
 1578 0032 43F00103 		orr	r3, r3, #1
 1579 0036 1360     		str	r3, [r2]
 1580              	.LVL86:
1265:Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_tim.h **** }
 1581              		.loc 3 1265 3 is_stmt 0 view .LVU456
 1582              	.LBE78:
 1583              	.LBE77:
 136:Src/main.c    **** 
 1584              		.loc 1 136 3 is_stmt 1 view .LVU457
 1585 0038 0D4D     		ldr	r5, .L61+4
 1586 003a 2846     		mov	r0, r5
 1587 003c FFF7FEFF 		bl	BMX_Init
 1588              	.LVL87:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 127


 139:Src/main.c    **** 
 1589              		.loc 1 139 3 view .LVU458
 1590 0040 0C4C     		ldr	r4, .L61+8
 1591 0042 0D49     		ldr	r1, .L61+12
 1592 0044 2046     		mov	r0, r4
 1593 0046 FFF7FEFF 		bl	sprintf
 1594              	.LVL88:
 141:Src/main.c    **** 
 1595              		.loc 1 141 3 view .LVU459
 141:Src/main.c    **** 
 1596              		.loc 1 141 36 is_stmt 0 view .LVU460
 1597 004a 2046     		mov	r0, r4
 1598 004c FFF7FEFF 		bl	strlen
 1599              	.LVL89:
 141:Src/main.c    **** 
 1600              		.loc 1 141 3 view .LVU461
 1601 0050 4FF0FF33 		mov	r3, #-1
 1602 0054 82B2     		uxth	r2, r0
 1603 0056 2146     		mov	r1, r4
 1604 0058 0848     		ldr	r0, .L61+16
 1605 005a FFF7FEFF 		bl	HAL_UART_Transmit
 1606              	.LVL90:
 144:Src/main.c    **** 
 1607              		.loc 1 144 3 is_stmt 1 view .LVU462
 1608 005e 2846     		mov	r0, r5
 1609 0060 FFF7FEFF 		bl	BMX_calibration
 1610              	.LVL91:
 147:Src/main.c    ****   //every time that an interrupt event occurs, but the only event which will call a function is per
 1611              		.loc 1 147 3 view .LVU463
 1612 0064 0648     		ldr	r0, .L61+20
 1613 0066 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1614              	.LVL92:
 1615              	.L59:
 156:Src/main.c    ****   {
 1616              		.loc 1 156 3 discriminator 1 view .LVU464
 161:Src/main.c    ****   /* USER CODE END 3 */
 1617              		.loc 1 161 3 discriminator 1 view .LVU465
 156:Src/main.c    ****   {
 1618              		.loc 1 156 9 discriminator 1 view .LVU466
 1619 006a FEE7     		b	.L59
 1620              	.L62:
 1621              		.align	2
 1622              	.L61:
 1623 006c 00000140 		.word	1073807360
 1624 0070 00000000 		.word	.LANCHOR6
 1625 0074 00000000 		.word	.LANCHOR5
 1626 0078 00000000 		.word	.LANCHOR7
 1627 007c 00000000 		.word	.LANCHOR2
 1628 0080 00000000 		.word	.LANCHOR1
 1629              		.cfi_endproc
 1630              	.LFE851:
 1632              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1633              		.align	1
 1634              		.global	HAL_TIM_PeriodElapsedCallback
 1635              		.syntax unified
 1636              		.thumb
 1637              		.thumb_func
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 128


 1638              		.fpu fpv5-d16
 1640              	HAL_TIM_PeriodElapsedCallback:
 1641              	.LVL93:
 1642              	.LFB861:
 583:Src/main.c    **** 
 584:Src/main.c    **** 
 585:Src/main.c    **** //definition of IRQhandler functions callback
 586:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef* htim){
 1643              		.loc 1 586 60 view -0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 587:Src/main.c    **** 
 588:Src/main.c    ****   if (htim==&htim2){
 1647              		.loc 1 588 3 view .LVU468
 1648              		.loc 1 588 6 is_stmt 0 view .LVU469
 1649 0000 214B     		ldr	r3, .L78
 1650 0002 8342     		cmp	r3, r0
 1651 0004 00D0     		beq	.L74
 1652 0006 7047     		bx	lr
 1653              	.L74:
 586:Src/main.c    **** 
 1654              		.loc 1 586 60 view .LVU470
 1655 0008 10B5     		push	{r4, lr}
 1656              	.LCFI23:
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 4, -8
 1659              		.cfi_offset 14, -4
 589:Src/main.c    **** 
 590:Src/main.c    ****     if(main_counter>=100){
 1660              		.loc 1 590 5 is_stmt 1 view .LVU471
 1661              		.loc 1 590 20 is_stmt 0 view .LVU472
 1662 000a 204B     		ldr	r3, .L78+4
 1663 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1664              		.loc 1 590 7 view .LVU473
 1665 000e 632B     		cmp	r3, #99
 1666 0010 08D8     		bhi	.L75
 1667              	.LVL94:
 1668              	.L65:
 591:Src/main.c    ****       main_counter = 0;
 592:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_2);//led toggle
 593:Src/main.c    ****       
 594:Src/main.c    ****       // sprintf((char*)buff, "accX= %f\n\r", BMX.Acceleration[0]);
 595:Src/main.c    ****       // HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 596:Src/main.c    **** 
 597:Src/main.c    ****     }
 598:Src/main.c    **** 
 599:Src/main.c    ****     BMX_read(&BMX); //Imu data read and save to the struct: data are raw unfiltered and maybe biase
 1669              		.loc 1 599 5 is_stmt 1 view .LVU474
 1670 0012 1F4C     		ldr	r4, .L78+8
 1671 0014 2046     		mov	r0, r4
 1672 0016 FFF7FEFF 		bl	BMX_read
 1673              	.LVL95:
 600:Src/main.c    ****     BMX_LPF(&BMX);
 1674              		.loc 1 600 5 view .LVU475
 1675 001a 2046     		mov	r0, r4
 1676 001c FFF7FEFF 		bl	BMX_LPF
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 129


 1677              	.LVL96:
 601:Src/main.c    **** 
 602:Src/main.c    ****     if (1){
 1678              		.loc 1 602 5 view .LVU476
 603:Src/main.c    **** 
 604:Src/main.c    ****       //fill the telemetry array with red values
 605:Src/main.c    ****       for (int i_tlm=0; i_tlm<6; i_tlm++) {
 1679              		.loc 1 605 7 view .LVU477
 1680              	.LBB79:
 1681              		.loc 1 605 12 view .LVU478
 1682              		.loc 1 605 16 is_stmt 0 view .LVU479
 1683 0020 0023     		movs	r3, #0
 1684              		.loc 1 605 7 view .LVU480
 1685 0022 0BE0     		b	.L66
 1686              	.LVL97:
 1687              	.L75:
 1688              		.loc 1 605 7 view .LVU481
 1689              	.LBE79:
 591:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_2);//led toggle
 1690              		.loc 1 591 7 is_stmt 1 view .LVU482
 591:Src/main.c    ****       HAL_GPIO_TogglePin(GPIOE, GPIO_PIN_2);//led toggle
 1691              		.loc 1 591 20 is_stmt 0 view .LVU483
 1692 0024 194B     		ldr	r3, .L78+4
 1693 0026 0022     		movs	r2, #0
 1694 0028 1A70     		strb	r2, [r3]
 592:Src/main.c    ****       
 1695              		.loc 1 592 7 is_stmt 1 view .LVU484
 1696 002a 0421     		movs	r1, #4
 1697 002c 1948     		ldr	r0, .L78+12
 1698              	.LVL98:
 592:Src/main.c    ****       
 1699              		.loc 1 592 7 is_stmt 0 view .LVU485
 1700 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1701              	.LVL99:
 1702 0032 EEE7     		b	.L65
 1703              	.LVL100:
 1704              	.L67:
 1705              	.LBB80:
 606:Src/main.c    ****         if (i_tlm<3) {
 607:Src/main.c    ****           *(Tlm_Tx_buff+i_tlm) = BMX.Omega_LPFd[i_tlm];
 608:Src/main.c    ****         }
 609:Src/main.c    ****         else if (i_tlm>=3 && i_tlm<6) {
 1706              		.loc 1 609 14 is_stmt 1 view .LVU486
 1707              		.loc 1 609 27 is_stmt 0 view .LVU487
 1708 0034 DA1E     		subs	r2, r3, #3
 1709              		.loc 1 609 17 view .LVU488
 1710 0036 022A     		cmp	r2, #2
 1711 0038 0FD9     		bls	.L76
 1712              	.L68:
 605:Src/main.c    ****         if (i_tlm<3) {
 1713              		.loc 1 605 34 is_stmt 1 discriminator 2 view .LVU489
 605:Src/main.c    ****         if (i_tlm<3) {
 1714              		.loc 1 605 39 is_stmt 0 discriminator 2 view .LVU490
 1715 003a 0133     		adds	r3, r3, #1
 1716              	.LVL101:
 1717              	.L66:
 605:Src/main.c    ****         if (i_tlm<3) {
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 130


 1718              		.loc 1 605 25 is_stmt 1 discriminator 1 view .LVU491
 605:Src/main.c    ****         if (i_tlm<3) {
 1719              		.loc 1 605 7 is_stmt 0 discriminator 1 view .LVU492
 1720 003c 052B     		cmp	r3, #5
 1721 003e 17DC     		bgt	.L77
 606:Src/main.c    ****         if (i_tlm<3) {
 1722              		.loc 1 606 9 is_stmt 1 view .LVU493
 606:Src/main.c    ****         if (i_tlm<3) {
 1723              		.loc 1 606 12 is_stmt 0 view .LVU494
 1724 0040 022B     		cmp	r3, #2
 1725 0042 F7DC     		bgt	.L67
 607:Src/main.c    ****         }
 1726              		.loc 1 607 11 is_stmt 1 view .LVU495
 607:Src/main.c    ****         }
 1727              		.loc 1 607 24 is_stmt 0 view .LVU496
 1728 0044 144A     		ldr	r2, .L78+16
 1729 0046 02EB8302 		add	r2, r2, r3, lsl #2
 607:Src/main.c    ****         }
 1730              		.loc 1 607 48 view .LVU497
 1731 004a 03F11C01 		add	r1, r3, #28
 1732 004e 1048     		ldr	r0, .L78+8
 1733 0050 00EB8101 		add	r1, r0, r1, lsl #2
 1734 0054 0968     		ldr	r1, [r1]	@ float
 607:Src/main.c    ****         }
 1735              		.loc 1 607 32 view .LVU498
 1736 0056 1160     		str	r1, [r2]	@ float
 1737 0058 EFE7     		b	.L68
 1738              	.L76:
 610:Src/main.c    ****           *(Tlm_Tx_buff+i_tlm) = BMX.Acc_LPFd[i_tlm - 3];
 1739              		.loc 1 610 11 is_stmt 1 view .LVU499
 1740              		.loc 1 610 24 is_stmt 0 view .LVU500
 1741 005a 0F4A     		ldr	r2, .L78+16
 1742 005c 02EB8302 		add	r2, r2, r3, lsl #2
 1743              		.loc 1 610 46 view .LVU501
 1744 0060 03F11B00 		add	r0, r3, #27
 1745 0064 0A49     		ldr	r1, .L78+8
 1746 0066 01EB8001 		add	r1, r1, r0, lsl #2
 1747 006a 4968     		ldr	r1, [r1, #4]	@ float
 1748              		.loc 1 610 32 view .LVU502
 1749 006c 1160     		str	r1, [r2]	@ float
 1750 006e E4E7     		b	.L68
 1751              	.L77:
 1752              		.loc 1 610 32 view .LVU503
 1753              	.LBE80:
 611:Src/main.c    ****         }
 612:Src/main.c    ****       }
 613:Src/main.c    **** 
 614:Src/main.c    ****       /* sprintf((char*)buff, "OmX= %f\n\r", Tlm_Tx_buff[0]);
 615:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 616:Src/main.c    **** 
 617:Src/main.c    ****       sprintf((char*)buff, "OmY= %f\n\r", Tlm_Tx_buff[1]);
 618:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 619:Src/main.c    **** 
 620:Src/main.c    ****       sprintf((char*)buff, "OmZ= %f\n\r", Tlm_Tx_buff[2]);
 621:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 622:Src/main.c    **** 
 623:Src/main.c    ****       sprintf((char*)buff, "aX= %f\n\r", Tlm_Tx_buff[3]);
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 131


 624:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 625:Src/main.c    **** 
 626:Src/main.c    ****       sprintf((char*)buff, "aY= %f\n\r", Tlm_Tx_buff[4]);
 627:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY);
 628:Src/main.c    **** 
 629:Src/main.c    ****       sprintf((char*)buff, "aZ= %f\n\r", Tlm_Tx_buff[5]);
 630:Src/main.c    ****       HAL_UART_Transmit(&huart4, buff, strlen((char*)buff), HAL_MAX_DELAY); */
 631:Src/main.c    **** 
 632:Src/main.c    ****       //send the telemetry array typecasted
 633:Src/main.c    ****       HAL_UART_Transmit(&huart4, (uint8_t*)Tlm_Tx_buff, 24, HAL_MAX_DELAY);
 1754              		.loc 1 633 7 is_stmt 1 view .LVU504
 1755 0070 4FF0FF33 		mov	r3, #-1
 1756              	.LVL102:
 1757              		.loc 1 633 7 is_stmt 0 view .LVU505
 1758 0074 1822     		movs	r2, #24
 1759 0076 0849     		ldr	r1, .L78+16
 1760 0078 0848     		ldr	r0, .L78+20
 1761 007a FFF7FEFF 		bl	HAL_UART_Transmit
 1762              	.LVL103:
 634:Src/main.c    **** 
 635:Src/main.c    ****       //tlm_counter = 0;
 636:Src/main.c    **** 
 637:Src/main.c    ****     }
 638:Src/main.c    ****     
 639:Src/main.c    ****     //tlm_counter += 1;
 640:Src/main.c    ****     main_counter += 1;
 1763              		.loc 1 640 5 is_stmt 1 view .LVU506
 1764              		.loc 1 640 18 is_stmt 0 view .LVU507
 1765 007e 034A     		ldr	r2, .L78+4
 1766 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1767 0082 0133     		adds	r3, r3, #1
 1768 0084 1370     		strb	r3, [r2]
 641:Src/main.c    ****   }
 642:Src/main.c    **** }
 1769              		.loc 1 642 1 view .LVU508
 1770 0086 10BD     		pop	{r4, pc}
 1771              	.L79:
 1772              		.align	2
 1773              	.L78:
 1774 0088 00000000 		.word	.LANCHOR1
 1775 008c 00000000 		.word	.LANCHOR8
 1776 0090 00000000 		.word	.LANCHOR6
 1777 0094 00100240 		.word	1073876992
 1778 0098 00000000 		.word	.LANCHOR9
 1779 009c 00000000 		.word	.LANCHOR2
 1780              		.cfi_endproc
 1781              	.LFE861:
 1783              		.section	.text.Error_Handler,"ax",%progbits
 1784              		.align	1
 1785              		.global	Error_Handler
 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1789              		.fpu fpv5-d16
 1791              	Error_Handler:
 1792              	.LFB862:
 643:Src/main.c    **** 
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 132


 644:Src/main.c    **** /* USER CODE END 4 */
 645:Src/main.c    **** 
 646:Src/main.c    **** /**
 647:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 648:Src/main.c    ****   * @retval None
 649:Src/main.c    ****   */
 650:Src/main.c    **** void Error_Handler(void)
 651:Src/main.c    **** {
 1793              		.loc 1 651 1 is_stmt 1 view -0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 0
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              		@ link register save eliminated.
 652:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 653:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 654:Src/main.c    **** 
 655:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 656:Src/main.c    **** }
 1798              		.loc 1 656 1 view .LVU510
 1799 0000 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE862:
 1803              		.global	sample_time
 1804              		.global	Tlm_Tx_buff
 1805              		.global	ret
 1806              		.global	tlm_counter
 1807              		.global	main_counter
 1808              		.global	string
 1809              		.global	buff
 1810              		.global	BMX
 1811              		.global	hdma_uart7_rx
 1812              		.global	huart7
 1813              		.global	huart4
 1814              		.global	htim2
 1815              		.global	hi2c4
 1816              		.section	.bss.BMX,"aw",%nobits
 1817              		.align	2
 1818              		.set	.LANCHOR6,. + 0
 1821              	BMX:
 1822 0000 00000000 		.space	172
 1822      00000000 
 1822      00000000 
 1822      00000000 
 1822      00000000 
 1823              		.section	.bss.Tlm_Tx_buff,"aw",%nobits
 1824              		.align	2
 1825              		.set	.LANCHOR9,. + 0
 1828              	Tlm_Tx_buff:
 1829 0000 00000000 		.space	24
 1829      00000000 
 1829      00000000 
 1829      00000000 
 1829      00000000 
 1830              		.section	.bss.buff,"aw",%nobits
 1831              		.align	2
 1832              		.set	.LANCHOR5,. + 0
 1835              	buff:
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 133


 1836 0000 00000000 		.space	32
 1836      00000000 
 1836      00000000 
 1836      00000000 
 1836      00000000 
 1837              		.section	.bss.hdma_uart7_rx,"aw",%nobits
 1838              		.align	2
 1841              	hdma_uart7_rx:
 1842 0000 00000000 		.space	96
 1842      00000000 
 1842      00000000 
 1842      00000000 
 1842      00000000 
 1843              		.section	.bss.hi2c4,"aw",%nobits
 1844              		.align	2
 1845              		.set	.LANCHOR0,. + 0
 1848              	hi2c4:
 1849 0000 00000000 		.space	76
 1849      00000000 
 1849      00000000 
 1849      00000000 
 1849      00000000 
 1850              		.section	.bss.htim2,"aw",%nobits
 1851              		.align	2
 1852              		.set	.LANCHOR1,. + 0
 1855              	htim2:
 1856 0000 00000000 		.space	64
 1856      00000000 
 1856      00000000 
 1856      00000000 
 1856      00000000 
 1857              		.section	.bss.huart4,"aw",%nobits
 1858              		.align	2
 1859              		.set	.LANCHOR2,. + 0
 1862              	huart4:
 1863 0000 00000000 		.space	128
 1863      00000000 
 1863      00000000 
 1863      00000000 
 1863      00000000 
 1864              		.section	.bss.huart7,"aw",%nobits
 1865              		.align	2
 1866              		.set	.LANCHOR3,. + 0
 1869              	huart7:
 1870 0000 00000000 		.space	128
 1870      00000000 
 1870      00000000 
 1870      00000000 
 1870      00000000 
 1871              		.section	.bss.main_counter,"aw",%nobits
 1872              		.set	.LANCHOR8,. + 0
 1875              	main_counter:
 1876 0000 00       		.space	1
 1877              		.section	.bss.ret,"aw",%nobits
 1880              	ret:
 1881 0000 00       		.space	1
 1882              		.section	.bss.tlm_counter,"aw",%nobits
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 134


 1885              	tlm_counter:
 1886 0000 00       		.space	1
 1887              		.section	.data.sample_time,"aw"
 1888              		.align	2
 1889              		.set	.LANCHOR4,. + 0
 1892              	sample_time:
 1893 0000 0AD7233C 		.word	1008981770
 1894              		.section	.data.string,"aw"
 1895              		.align	2
 1896              		.set	.LANCHOR7,. + 0
 1899              	string:
 1900 0000 48656C6C 		.ascii	"Hello World!\015\012\000"
 1900      6F20576F 
 1900      726C6421 
 1900      0D0A00
 1901              		.text
 1902              	.Letext0:
 1903              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 1904              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 1905              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 1906              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1907              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 1908              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 1909              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 1910              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 1911              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c.h"
 1912              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 1913              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 1914              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_rcc.h"
 1915              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_dma.h"
 1916              		.file 17 "Inc/BMX160.h"
 1917              		.file 18 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 1918              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1919              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1920              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim_ex.h"
 1921              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_i2c_ex.h"
 1922              		.file 23 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 1923              		.file 24 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\in
 1924              		.file 25 "<built-in>"
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 135


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:17     .text.MX_GPIO_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:144    .text.MX_GPIO_Init:00000080 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:150    .text.MX_DMA_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:156    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:204    .text.MX_DMA_Init:00000030 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:209    .text.MX_I2C4_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:215    .text.MX_I2C4_Init:00000000 MX_I2C4_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:282    .text.MX_I2C4_Init:00000038 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:289    .text.MX_TIM2_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:295    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:380    .text.MX_TIM2_Init:00000050 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:385    .text.MX_UART4_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:391    .text.MX_UART4_Init:00000000 MX_UART4_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:446    .text.MX_UART4_Init:00000028 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:452    .text.MX_UART7_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:458    .text.MX_UART7_Init:00000000 MX_UART7_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:514    .text.MX_UART7_Init:0000002c $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:521    .text.MX_TIM1_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:527    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:667    .text.MX_TIM1_Init:00000068 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:674    .text.SystemClock_Config:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:681    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:840    .text.SystemClock_Config:000000a8 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:847    .rodata.BMX_Init.str1.4:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:860    .text.BMX_Init:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:867    .text.BMX_Init:00000000 BMX_Init
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1477   .text.BMX_Init:000002f0 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1491   .text.BMX_Init:00000320 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1513   .text.BMX_Init:00000344 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1520   .text.main:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1527   .text.main:00000000 main
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1623   .text.main:0000006c $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1633   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1640   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1774   .text.HAL_TIM_PeriodElapsedCallback:00000088 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1784   .text.Error_Handler:00000000 $t
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1791   .text.Error_Handler:00000000 Error_Handler
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1892   .data.sample_time:00000000 sample_time
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1828   .bss.Tlm_Tx_buff:00000000 Tlm_Tx_buff
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1880   .bss.ret:00000000 ret
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1885   .bss.tlm_counter:00000000 tlm_counter
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1875   .bss.main_counter:00000000 main_counter
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1899   .data.string:00000000 string
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1835   .bss.buff:00000000 buff
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1821   .bss.BMX:00000000 BMX
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1841   .bss.hdma_uart7_rx:00000000 hdma_uart7_rx
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1869   .bss.huart7:00000000 huart7
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1862   .bss.huart4:00000000 huart4
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1855   .bss.htim2:00000000 htim2
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1848   .bss.hi2c4:00000000 hi2c4
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1817   .bss.BMX:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1824   .bss.Tlm_Tx_buff:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1831   .bss.buff:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1838   .bss.hdma_uart7_rx:00000000 $d
ARM GAS  C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s 			page 136


C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1844   .bss.hi2c4:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1851   .bss.htim2:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1858   .bss.huart4:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1865   .bss.huart7:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1876   .bss.main_counter:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1881   .bss.ret:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1886   .bss.tlm_counter:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1888   .data.sample_time:00000000 $d
C:\Users\Giorgio\AppData\Local\Temp\ccpuEN3p.s:1895   .data.string:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
LL_TIM_Init
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_I2C_Master_Transmit
strlen
HAL_UART_Transmit
HAL_Delay
HAL_Init
sprintf
BMX_calibration
HAL_TIM_Base_Start_IT
BMX_read
BMX_LPF
HAL_GPIO_TogglePin
